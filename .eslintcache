[{"C:\\Users\\super\\.vscode\\ott\\src\\Components\\Categories.js":"1","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Home.js":"2","C:\\Users\\super\\.vscode\\ott\\src\\Database\\uploadData.js":"3","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Category.js":"4","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Feedback.js":"5","C:\\Users\\super\\.vscode\\ott\\src\\index.js":"6","C:\\Users\\super\\.vscode\\ott\\src\\App.js":"7","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\SearchPage.js":"8","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\PlayScreen.js":"9","C:\\Users\\super\\.vscode\\ott\\src\\Database\\logIn.js":"10","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getDoc.js":"11","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Display.js":"12","C:\\Users\\super\\.vscode\\ott\\src\\Theme\\Theme.js":"13","C:\\Users\\super\\.vscode\\ott\\src\\firebase.js":"14","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Discover.js":"15","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getCollectionQuery.js":"16","C:\\Users\\super\\.vscode\\ott\\src\\Database\\shuffleArray.js":"17","C:\\Users\\super\\.vscode\\ott\\src\\Components\\MyList.js":"18","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Anime.js":"19","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Temp.js":"20","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getEpisode.js":"21","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Help.js":"22","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\About.js":"23","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Signin.js":"24","C:\\Users\\super\\.vscode\\ott\\src\\Components\\SeasonTabs.js":"25","C:\\Users\\super\\.vscode\\ott\\src\\Components\\SubAppBar.js":"26","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\FileUpload.js":"27","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getCollection.js":"28","C:\\Users\\super\\.vscode\\ott\\src\\Components\\MyAppBar.js":"29","C:\\Users\\super\\.vscode\\ott\\src\\reportWebVitals.js":"30","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getSeason.js":"31","C:\\Users\\super\\.vscode\\ott\\src\\Components\\Carousel.js":"32","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getSubCollection.js":"33"},{"size":2320,"mtime":1608081704057,"results":"34","hashOfConfig":"35"},{"size":2752,"mtime":1608273748006,"results":"36","hashOfConfig":"35"},{"size":7753,"mtime":1608192077617,"results":"37","hashOfConfig":"35"},{"size":1582,"mtime":1608084415207,"results":"38","hashOfConfig":"35"},{"size":2493,"mtime":1608108132053,"results":"39","hashOfConfig":"35"},{"size":500,"mtime":499162500000,"results":"40","hashOfConfig":"35"},{"size":4839,"mtime":1607936122194,"results":"41","hashOfConfig":"35"},{"size":2618,"mtime":1607937320453,"results":"42","hashOfConfig":"35"},{"size":10878,"mtime":1608274762659,"results":"43","hashOfConfig":"35"},{"size":1716,"mtime":1608274284447,"results":"44","hashOfConfig":"35"},{"size":1681,"mtime":1608173339538,"results":"45","hashOfConfig":"35"},{"size":16360,"mtime":1608191219603,"results":"46","hashOfConfig":"35"},{"size":390,"mtime":1606839707667,"results":"47","hashOfConfig":"35"},{"size":818,"mtime":1608216569772,"results":"48","hashOfConfig":"35"},{"size":750,"mtime":1607757223729,"results":"49","hashOfConfig":"35"},{"size":2423,"mtime":1607760769241,"results":"50","hashOfConfig":"35"},{"size":269,"mtime":1607625601092,"results":"51","hashOfConfig":"35"},{"size":3097,"mtime":1607992563052,"results":"52","hashOfConfig":"35"},{"size":2000,"mtime":1608053167774,"results":"53","hashOfConfig":"35"},{"size":694,"mtime":1607936385771,"results":"54","hashOfConfig":"35"},{"size":515,"mtime":1607670187323,"results":"55","hashOfConfig":"35"},{"size":4539,"mtime":1607516489556,"results":"56","hashOfConfig":"35"},{"size":3112,"mtime":1607515585605,"results":"57","hashOfConfig":"35"},{"size":5441,"mtime":1607831178817,"results":"58","hashOfConfig":"35"},{"size":9508,"mtime":1608185474772,"results":"59","hashOfConfig":"35"},{"size":2087,"mtime":1607702370801,"results":"60","hashOfConfig":"35"},{"size":1452,"mtime":1607599628422,"results":"61","hashOfConfig":"35"},{"size":493,"mtime":1606467525268,"results":"62","hashOfConfig":"35"},{"size":9019,"mtime":1607990960585,"results":"63","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"64","hashOfConfig":"35"},{"size":660,"mtime":1607664182131,"results":"65","hashOfConfig":"35"},{"size":1344,"mtime":1607663188058,"results":"66","hashOfConfig":"35"},{"size":565,"mtime":1607874848929,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1m4booa",{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"87"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"87"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"77"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\super\\.vscode\\ott\\src\\Components\\Categories.js",[],["151","152"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Home.js",["153","154"],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\uploadData.js",["155","156","157","158","159","160"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Category.js",[],["161","162"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Feedback.js",[],["163","164"],"C:\\Users\\super\\.vscode\\ott\\src\\index.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\App.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\SearchPage.js",[],["165","166"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\PlayScreen.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\logIn.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getDoc.js",[],["167","168"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Display.js",["169","170"],"import React, { Component } from 'react'\r\nimport { theme } from \"../Theme/Theme\"\r\nimport \"../CSS/Pages/Display.css\"\r\nimport \"../CSS/Components/MyList.css\"\r\nimport { ButtonBase, IconButton } from '@material-ui/core'\r\nimport { ArrowBackRounded, PlayArrowRounded, VolumeMuteRounded, VolumeUpRounded } from '@material-ui/icons'\r\nimport getDoc from '../Database/getDoc'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport Loader from 'react-loader-spinner'\r\nimport getSubCollection from '../Database/getSubCollection'\r\nimport getSeasons from '../Database/getSeason'\r\nimport { useParams } from 'react-router-dom'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Link } from \"react-tiger-transition\";\r\nimport SeasonTabs from '../Components/SeasonTabs'\r\nimport axios from 'axios'\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport class Adapter extends Component {\r\n\r\n    state = {\r\n        mute: true,\r\n        cover: true,\r\n        show: null,\r\n        related: null,\r\n        seasons: null,\r\n        link: null,\r\n        open: null,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    findRelated = (industry, platform, genre) => {\r\n        getSubCollection(industry, platform, genre).then(snap => {\r\n            this.setState({ related: snap })\r\n        })\r\n    }\r\n\r\n    getSeason = (id, season) => {\r\n        getSeasons(id, season).then(snap => {\r\n            this.setState({ seasons: snap })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*getDoc(\"Content\" , this.props.id).then(snap => {\r\n                    this.setState({ show: snap })\r\n                if (snap.premium) {\r\n                    //check if bought\r\n                    //checkPaymnet(snap.id, series).then(result=>{if(result){setState({link:}; else{setState({link:pay} )})}})\r\n                    //if yes: link to episode.\r\n\r\n                    //if no: link to payment page.\r\n                    //this.setState({ open: true })\r\n                    //<Link to={\"/play/\" + this.state.show.industry + \"/\" + this.state.show.platform + \"/\" + this.state.show.genre + \"/\" + this.state.show.id + \"/Season-1/episode-1\"} >\r\n                }\r\n            })*/\r\n        axios.post('https://us-central1-project-ott-d883c.cloudfunctions.net/widgets/get-doc', { //get-doc\r\n            name:\"Content\",\r\n            doc_name: this.props.id\r\n        }).then(snap => {\r\n            this.setState({ show: snap.data })\r\n        })\r\n    }\r\n\r\n    handleMute = () => {\r\n        if (this.state.mute) {\r\n            this.setState({ mute: false })\r\n        }\r\n        else {\r\n            this.setState({ mute: true })\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ color: theme.palette.primary.light }} className=\"transition-item detail-page\" >\r\n                {\r\n                    this.state.show ? (\r\n                        <div>\r\n                            <div className=\"wrap\" style={{ overflow: \"hidden\", paddingBottom: '30px' }} >\r\n                                <div className=\"mute\">\r\n                                    <Link to=\"/\" transition='glide-left'  >\r\n                                        <IconButton >\r\n                                            <ArrowBackRounded style={{ color: \"white\", fontSize: \"20px\" }} />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                    {\r\n                                        this.state.mute ? (\r\n                                            <IconButton onClick={this.handleMute} >\r\n                                                <VolumeMuteRounded style={{ color: \"white\", fontSize: \"20px\" }} />\r\n                                            </IconButton>\r\n                                        ) : (\r\n                                                <IconButton onClick={this.handleMute} >\r\n                                                    <VolumeUpRounded style={{ color: \"white\", fontSize: \"20px\" }} />\r\n                                                </IconButton>\r\n                                            )\r\n                                    }\r\n                                </div>\r\n\r\n                                <video\r\n                                    autoPlay={true}\r\n                                    loop={false}\r\n                                    muted={this.state.mute}\r\n                                    style={{ height: \"100%\" }}\r\n                                    className=\"cover-image\">\r\n                                    <source src={this.state.show.trailer} className=\"cover-image\" />\r\n                                </video>\r\n                            </div>\r\n                            <div className=\"wrap\" style={{ marginBottom: \"30px\" }} >\r\n                                <div className=\"wrap play-button\" >\r\n                                    <Link to={\"/play/\" + this.state.show.id + \"/Season-1/episode-01\"} >\r\n                                        <IconButton>\r\n                                            <PlayArrowRounded style={{ fontSize: \"40px\", color: \"black\" }} />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"display-name wrap\" >\r\n                                {this.state.show.name}\r\n                            </div>\r\n                            <div className=\"wrap display-type\" >\r\n                                {this.state.show.keywords}\r\n                            </div>\r\n\r\n                            <div className=\"wrap\" style={{ flexWrap: \"nowrap\", margin: \"20px 0px\" }} >\r\n                                <div style={{ margin: \"0px 20px\", width: \"33%\" }} >\r\n                                    <div className=\"display-type wrap\" >\r\n                                        Year\r\n                                    </div>\r\n                                    <div className=\"wrap\" >\r\n                                        {this.state.show.year}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"wrap\" style={{ margin: \"0px 20px\", width: \"33%\" }}  >\r\n                                    <div>\r\n                                        <div className=\"display-type wrap\" >\r\n                                            Country\r\n                                        </div>\r\n                                        <div className=\"wrap\" >\r\n                                            {this.state.show.country}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ margin: \"0px 20px\", width: \"33%\" }}  >\r\n                                    <div className=\"display-type wrap\" >\r\n                                        Length\r\n                                    </div>\r\n                                    <div className=\"wrap\" >\r\n                                        {this.state.show.leng}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/*<div>\r\n                                <div className=\"display-type wrap\" >\r\n                                    A Product Of\r\n                                </div>\r\n                                <div className=\"wrap\" >\r\n                                    <img alt=\"app\" src={this.state.show.app} width=\"30px\" style={{ marginRight: \"10px\", borderRadius: \"5px\" }} />\r\n                                    {this.state.show.appName}\r\n                                </div>\r\n                            </div>*/}\r\n\r\n                            {/*<div className=\"wrap\" style={{ margin: \"20px 0px\" }} >\r\n                                <ButtonBase>\r\n                                    <div className=\"rent-button\">\r\n                                        <div className=\"wrap display-type\" style={{ color: \"white\" }} >Rent</div>\r\n                                        <div className=\"wrap \" >&#8377;20 /month</div>\r\n                                    </div>\r\n                                </ButtonBase>\r\n                            </div>*/}\r\n\r\n                            <div style={{ padding: '20px', textAlign: \"center\" }} className=\"display-type\" >\r\n                                {this.state.show.description}\r\n                            </div>\r\n\r\n                            {\r\n                                this.state.show.season ? (\r\n                                    <div>\r\n                                        {/*<div className=\"h7\" >\r\n                                            Season - 1\r\n                                        </div>\r\n                                        <div className=\"ss-container\" >\r\n                                            {\r\n                                                this.state.seasons.map(item => {\r\n                                                    return (\r\n                                                        <Link to={\"/play/\" + this.state.show.industry + \"/\" + this.state.show.platform + \"/\" + this.state.show.genre + \"/\" + this.state.show.id + \"/Season-1/\" + item.id} >\r\n                                                            <img src={item.image} className=\"ss\" alt=\"i\" />\r\n                                                        </Link>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>*/}\r\n                                        <SeasonTabs seasons={this.state.show.season} id={this.state.show.id} />\r\n                                    </div>\r\n                                ) : (\r\n                                        <div></div>\r\n                                    )\r\n                            }\r\n\r\n                            {\r\n                                this.state.related ? (\r\n                                    <div>\r\n                                        <div className=\"h7\" >\r\n                                            Related\r\n                                        </div>\r\n                                        <div className=\"ss-container\" >\r\n                                            {\r\n                                                this.state.related.map(item => {\r\n                                                    return (\r\n                                                        <ButtonBase style={{ height: \"100%\", marginRight: \"20px\" }}>\r\n                                                            <a href={\"/display/\" + item.industry + \"/\" + item.platform + \"/\" + item.genre + \"/\" + item.id}\r\n                                                                style={{ height: \"100%\" }}  >\r\n                                                                <div className=\"list-item wrap\" style={{ backgroundImage: \"url(\" + item.poster + \")\" }} >\r\n\r\n                                                                </div>\r\n                                                            </a>\r\n                                                        </ButtonBase>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                        <div></div>\r\n                                    )\r\n                            }\r\n                        </div>\r\n                    ) : (\r\n                            <div className=\"wrap\" style={{ minHeight: \"100vh\" }} >\r\n                                <Loader\r\n                                    type=\"Audio\"\r\n                                    color=\"#212121\"\r\n                                    height={50}\r\n                                    width={50}\r\n                                    timeout={3000} //3 secs\r\n\r\n                                />\r\n                            </div>\r\n                        )\r\n                }\r\n\r\n                <Dialog fullScreen open={this.state.open} TransitionComponent={Transition} style={{ marginTop: \"30%\", boxShadow: \"0px -10px 20px rgba(0,0,0,0.5)\", backgroundColor: theme.palette.primary.dark, color: theme.palette.primary.light }} >\r\n                    <AppBar position=\"relative\" elevation={0} style={{ backgroundColor: theme.palette.primary.dark, color: theme.palette.primary.light }} >\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={this.handleClose} aria-label=\"close\">\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    {\r\n                        this.state.show ? (\r\n                            <div>\r\n                                <div>\r\n                                    <div className=\"wrap\" >\r\n                                        <div className=\"list-item wrap\" style={{ backgroundImage: \"url(\" + this.state.show.poster + \")\", margin: '15px' }} >\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div >\r\n                                        <div>\r\n                                            <div className=\"wrap\" >\r\n                                                <div style={{ marginRight: \"10px\" }} >\r\n                                                    <img className=\"app-logo\" alt=\"logo\" src={this.state.show.app} width=\"30px\" />\r\n                                                </div>\r\n                                                <div>\r\n                                                    {this.state.show.appName}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"wrap\" style={{ margin: \"20px 0px\" }} >\r\n                                                <ButtonBase>\r\n                                                    <div className=\"rent-button\">\r\n                                                        <div className=\"wrap display-type\" style={{ color: \"white\" }} >Rent</div>\r\n                                                        <div className=\"wrap \" >&#8377;20 /month</div>\r\n                                                    </div>\r\n                                                </ButtonBase>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"wrap display-type\" style={{ textAlign: \"center\", marginBottom: \"20px\" }} >\r\n                                    Why buy expensive yearly or monthly packages and subscriptions. When you can rent for less?\r\n                                </div>\r\n                                <div className=\"h7\" >\r\n                                    Recommended Plans\r\n                                </div>\r\n\r\n                            </div>\r\n                        ) : (\r\n                                <div></div>\r\n                            )\r\n                    }\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function Display() {\r\n    const { industry } = useParams();\r\n    const { platform } = useParams();\r\n    const { genre } = useParams();\r\n    const { id } = useParams();\r\n\r\n    React.useEffect(() => {\r\n    }, [industry]);\r\n\r\n    return (\r\n        <Adapter industry={industry} platform={platform} genre={genre} id={id} />\r\n    )\r\n}\r\n","C:\\Users\\super\\.vscode\\ott\\src\\Theme\\Theme.js",[],["171","172"],"C:\\Users\\super\\.vscode\\ott\\src\\firebase.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Discover.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getCollectionQuery.js",[],["173","174"],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\shuffleArray.js",[],["175","176"],"C:\\Users\\super\\.vscode\\ott\\src\\Components\\MyList.js",["177"],"import React, { Component } from 'react'\r\nimport \"../CSS/Components/MyList.css\"\r\nimport { ButtonBase } from '@material-ui/core'\r\n//import { Link } from 'react-router-dom'\r\nimport { Link } from \"react-tiger-transition\";\r\nimport { FixedSizeList } from 'react-window';\r\n\r\nexport class MyList extends Component {\r\n\r\n    state = {\r\n        data: null\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.data ? (\r\n                        <div>\r\n                            <div className=\"h7\" >\r\n                                {this.props.title}\r\n                            </div>\r\n\r\n\r\n                            <div className=\"list-container\" >\r\n                                {\r\n                                    this.props.data.map(item => {\r\n                                        return (\r\n                                            <div style={{ display: \"inline-block\" }} >\r\n\r\n                                                <ButtonBase style={{ height: \"100%\", marginRight: \"20px\" }}>\r\n                                                    <Link to={\"/display/\" + item.id}\r\n                                                        transition='glide-left'\r\n                                                        style={{ height: \"100%\" }}  >\r\n                                                        <div className=\"list-item wrap\" style={{ backgroundImage: \"url(\" + item.poster + \")\" }} >\r\n\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                </ButtonBase>\r\n                                                {/*<div style={{ margin: \"10px 0px\", display: \"flex\" }} >\r\n                                                    <div>\r\n                                                        <img src={item.app} className=\"app-logo\" alt=\"app\" width=\"30px\" />\r\n                                                    </div>\r\n                                                    <div style={{ marginLeft: \"5px\" }} >\r\n                                                        <div>\r\n                                                            {item.name}\r\n                                                        </div>\r\n                                                        <div style={{ fontSize: \"10px\" }} className=\"rate\" >\r\n                                                            {item.year}\r\n                                                        </div>\r\n                                                    </div>\r\n                                        </div>*/}\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                            <div>\r\n\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyList\r\n","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Anime.js",["178"],"import React, { Component } from 'react'\r\nimport MyList from '../../Components/MyList'\r\nimport SubAppBar from '../../Components/SubAppBar'\r\nimport getCollectionQuery, { getByWord } from '../../Database/getCollectionQuery'\r\nimport shuffleArray from '../../Database/shuffleArray'\r\nimport axios from 'axios';\r\n\r\nconst list = [\r\n    {\r\n        title: \"All\",\r\n        filter: \"Anime\"\r\n    }\r\n]\r\n\r\nvar data = []\r\n\r\nexport class Anime extends Component {\r\n\r\n    state = {\r\n        data: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        for (var i = 0; i < list.length; i++) {\r\n            if (list[i].filter.length > 2) {\r\n                getByWord(\"Index\", list[i].filter).then(result => {\r\n                    data.push(shuffleArray(result))\r\n                    this.setState({ data: data })\r\n                })\r\n            } else {\r\n                getCollectionQuery(\"Index\", list[i].filter).then(result => {\r\n                    data.push(shuffleArray(result))\r\n                    this.setState({ data: data })\r\n                })\r\n            }\r\n        }\r\n\r\n        /*axios.post(\"https://us-central1-project-ott-d883c.cloudfunctions.net/api/todos\", { name: \"NAME\" }).then(result => {\r\n            console.log(result.data)\r\n        })*/\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SubAppBar />\r\n                {\r\n                    this.state.data ? (\r\n                        <MyList title=\"All\" data={this.state.data[0]} />\r\n                    ) : (\r\n                            <div className=\"wrap\" >\r\n                                Please Wait\r\n                            </div>\r\n                        )\r\n                }\r\n                {/*<MyList title=\"Shounen Comedy\" filter={[\"Shounen\", \"Comedy\"]} />\r\n                <MyList title=\"Children & Family\" filter={[\"Anime\", \"Shounen\"]} />\r\n                <MyList title=\"Slice Of Life\" filter={[\"Anime\", \"Slice Of Life\"]} />*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Anime\r\n","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Temp.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getEpisode.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Help.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\About.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Signin.js",["179"],"import React, { Component } from 'react'\r\nimport SubAppBar from \"../Components/SubAppBar\"\r\nimport { FaFacebookF, FaGooglePlusG } from \"react-icons/fa\"\r\n\r\nexport class Signin extends Component {\r\n\r\n    state = {\r\n        pw: null,\r\n        userEmail: \"\",\r\n        cpw: null,\r\n        error: null,\r\n        phone: \"\",\r\n    }\r\n\r\n    responseGoogle = () => {\r\n        window.Android.signin();\r\n    }\r\n\r\n    responseEmail = (e) => {\r\n        e.preventDefault()\r\n        if (this.state.pw === this.state.cpw) {\r\n            window.Android.emailsignin(this.state.userEmail, this.state.pw);\r\n        } else if (this.state.pw !== this.state.cpw) {\r\n            this.setState({ error: \"Passwords do not match.\" })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SubAppBar />\r\n\r\n                <div>\r\n                    <h2 className=\"wrap\" >\r\n                        Sign In\r\n                    </h2>\r\n                    {/*<div className=\"wrap\" >\r\n                        Sign in by Phone.\r\n                    </div>\r\n                    <form style={{ padding: \"10px\" }} onSubmit={(e) => { this.responseEmail(e) }} >\r\n                        <div>\r\n                            <label>Phone</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"phone\" name=\"phone\" required placeholder=\"Phone\" value={this.state.phone} onChange={(e) => { this.setState({ phone: e.target.value }) }} />\r\n                        </div>\r\n                        {\r\n                            this.state.phone.length > 9 && this.state.userEmail.length < 1 ? (\r\n                                <div className=\"wrap\" >\r\n                                    <input type=\"submit\" value=\"Get OTP\" />\r\n                                </div>\r\n                            ) : (\r\n                                    <div></div>\r\n                                )\r\n                        }\r\n                    </form>*/}\r\n\r\n                    <div className=\"wrap\" >\r\n                        Sign in by e-mail.\r\n                    </div>\r\n                    <form style={{ padding: \"10px\" }} onSubmit={(e) => { this.responseEmail(e) }} >\r\n                        <div>\r\n                            <label>Email</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"email\" name=\"email\" required placeholder=\"Email\" value={this.state.userEmail} onChange={(e) => { this.setState({ userEmail: e.target.value }) }} />\r\n                        </div>\r\n                        {\r\n                            this.state.userEmail.length > 0 ? (\r\n                                <div>\r\n                                    <div>\r\n                                        <label>Password</label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input id=\"pw\" name=\"pw\" required placeholder=\"Password\" value={this.state.pw} onChange={(e) => { this.setState({ pw: e.target.value }) }} />\r\n                                    </div>\r\n                                    <div>\r\n                                        <label>Confirm Password</label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input id=\"cpw\" name=\"cpw\" required placeholder=\"Confirm Password\" value={this.state.cpw} onChange={(e) => { this.setState({ cpw: e.target.value }) }} />\r\n                                    </div>\r\n                                    <div className=\"wrap\" >\r\n                                        <input type=\"submit\" value=\"Sign In\" />\r\n                                    </div>\r\n                                    <div>\r\n                                        {this.state.error}\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                    <div>\r\n\r\n                                    </div>\r\n                                )\r\n                        }\r\n                    </form>\r\n                </div>\r\n\r\n                <p className=\"wrap\" >\r\n                    <h3>\r\n                        Other Sign In Options\r\n                    </h3>\r\n                </p>\r\n\r\n                <div className=\"wrap\">\r\n                    <div>\r\n                        <div className=\"wrap\" >\r\n                            <div onClick={this.responseGoogle} className=\"wrap\"\r\n                                style={{\r\n                                    borderRadius: \"5px\",\r\n                                    boxShadow: \"0px 0px 5px\",\r\n                                    padding: \"10px\",\r\n                                    backgroundColor: \"#D54836\",\r\n                                    color: \"white\",\r\n                                    justifyContent: \"space-between\",\r\n                                    margin: \"10px\"\r\n                                }} >\r\n                                <FaGooglePlusG size=\"20px\" style={{ marginRight: \"10px\" }} />\r\n                                <div>\r\n                                    Google\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signin\r\n","C:\\Users\\super\\.vscode\\ott\\src\\Components\\SeasonTabs.js",["180","181"],"import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { theme as color } from '../Theme/Theme'\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport \"../CSS/Pages/Display.css\"\r\nimport \"../CSS/Components/MyList.css\"\r\nimport getSubCollection from '../Database/getSubCollection';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3} style={{padding:\"10px 0px\"}} >\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\n\r\nconst StyledTabs = withStyles({\r\n    indicator: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'transparent',\r\n        '& > span': {\r\n            maxWidth: 40,\r\n            width: '100%',\r\n            backgroundColor: '#fff',\r\n        },\r\n    },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        color: '#fff',\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        fontSize: theme.typography.pxToRem(15),\r\n        marginRight: theme.spacing(1),\r\n        '&:focus': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    padding: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    demo2: {\r\n        backgroundColor: color.palette.primary.dark,\r\n    },\r\n}));\r\n\r\n\r\nexport default function SeasonTabs(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    const [tabs, setTabs] = React.useState([])\r\n    const [s] = React.useState([])\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        var i = 0;\r\n\r\n        for (i; i < parseInt(props.seasons); i++) {\r\n            tabs.push(\r\n                <StyledTab label={\"Season \" + (i + 1)} />\r\n            )\r\n            getSubCollection(\"Content\", props.id, \"Season-\"+(i+1)).then(r=>{\r\n                s.push(r)\r\n            })\r\n        }\r\n\r\n        setTabs(tabs)\r\n    },[tabs]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.demo2}>\r\n                <StyledTabs value={value} variant=\"scrollable\" scrollButtons=\"auto\" onChange={handleChange} aria-label=\"styled tabs example\">\r\n                    {\r\n                        tabs.map(item => {\r\n                            return (\r\n                                item\r\n                            )\r\n                        })\r\n                    }\r\n                </StyledTabs>\r\n                {\r\n                    tabs.map((item, index) => {\r\n                        if(index < 9 ){\r\n                            return (\r\n                                <TabPanel value={value} index={index}>\r\n                                    <div className=\"ss-container\" >\r\n                                        {\r\n                                            s[index] &&\r\n                                            s[index].map((i, episode) => {\r\n                                                if(episode < 9){\r\n                                                    return (\r\n                                                        <a href={\"/play/\" + props.id + \"/Season-\" + (index + 1) + \"/episode-0\" + (episode + 1 )} >\r\n                                                            <div style={{\r\n                                                                background:\"url(\"+i.image+\")\",\r\n                                                                backgroundSize:\"cover\", \r\n                                                                backgroundPosition:\"center\", \r\n                                                                height:\"30vw\", \r\n                                                                width:\"45vw\",\r\n                                                                marginRight:\"10px\",\r\n                                                                borderRadius:\"2px\",\r\n                                                                boxShadow:\"0px 10px 10px  rgba(0, 0, 0, 0.5)\",\r\n                                                                display:\"flex\",\r\n                                                                flexDirection:\"column\",\r\n                                                                justifyContent:\"flex-end\"\r\n                                                                }} >\r\n                                                                <div style={{ bottom:\"0\", width:'20%', padding:\"1px 0px\", backgroundColor:\"white\"}} >\r\n        \r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div style={{fontSize:\"12px\", textOverflow:\"ellipsis\", width:\"40vw\", whiteSpace:\"nowrap\", overflow:\"hidden\", marginTop:\"10px\"}} >\r\n                                                               {i.name} \r\n                                                            </div>\r\n                                                            <div style={{fontSize:\"10px\",color:\"grey\",textTransform:\"uppercase\"}} >\r\n                                                               Season-{(index+1)} Episode-{(episode+1)} \r\n                                                            </div>\r\n                                                            <div style={{fontSize:\"10px\",color:\"grey\",textTransform:\"uppercase\"}} >\r\n                                                               {i.date}\r\n                                                            </div>\r\n                                                        </a>\r\n                                                    )\r\n                                                }else{\r\n                                                    return (\r\n                                                        <a href={\"/play/\" + props.id + \"/Season-\" + (index + 1) + \"/episode-\" + (episode + 1 )} >\r\n                                                            <div style={{\r\n                                                                background:\"url(\"+i.image+\")\",\r\n                                                                backgroundSize:\"cover\", \r\n                                                                backgroundPosition:\"center\", \r\n                                                                height:\"30vw\", \r\n                                                                width:\"45vw\",\r\n                                                                marginRight:\"10px\",\r\n                                                                borderRadius:\"2px\",\r\n                                                                boxShadow:\"0px 10px 10px  rgba(0, 0, 0, 0.5)\",\r\n                                                                display:\"flex\",\r\n                                                                flexDirection:\"column\",\r\n                                                                justifyContent:\"flex-end\"\r\n                                                                }} >\r\n                                                            </div>\r\n                                                            <div style={{fontSize:\"12px\", textOverflow:\"ellipsis\", width:\"40vw\", whiteSpace:\"nowrap\", overflow:\"hidden\", marginTop:\"10px\"}} >\r\n                                                               {i.name} \r\n                                                            </div>\r\n                                                            <div style={{fontSize:\"10px\",color:\"grey\",textTransform:\"uppercase\"}} >\r\n                                                               Season-{(index+1)} Episode-{(episode+1)} \r\n                                                            </div>\r\n                                                            <div style={{fontSize:\"10px\",color:\"grey\",textTransform:\"uppercase\"}} >\r\n                                                               {i.date}\r\n                                                            </div>\r\n                                                        </a>\r\n                                                    )\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </TabPanel>\r\n                            )\r\n                        }else{\r\n\r\n                        }\r\n                    })\r\n                }\r\n                <Typography className={classes.padding} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n",["182","183"],"C:\\Users\\super\\.vscode\\ott\\src\\Components\\SubAppBar.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\FileUpload.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getCollection.js",[],["184","185"],"C:\\Users\\super\\.vscode\\ott\\src\\Components\\MyAppBar.js",["186"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { theme as color } from '../Theme/Theme';\r\nimport { CommentRounded, FolderSpecialRounded, Help, InfoRounded, PowerOff, } from '@material-ui/icons';\r\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\r\nimport { FaBolt, FaTheaterMasks, FaUser } from 'react-icons/fa';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(0),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nfunction HideOnScroll(props) {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={!trigger}>\r\n            {children}\r\n        </Slide>\r\n    );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    window: PropTypes.func,\r\n};\r\n\r\nexport default function MyAppBar(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [signin, setSignin] = React.useState({})\r\n    const [logOut, setLogOut] = React.useState({})\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (!props.uid) {\r\n            setSignin({ name: \"Sign In\", icon: <FaUser />, to: \"/sign-in\" })\r\n            setLogOut({})\r\n        } else {\r\n            setLogOut({ name: \"Logout\", icon: <PowerOff /> })\r\n            setSignin({})\r\n        }\r\n    }, [props])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <AppBar\r\n                elevation={0}\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n                style={{ backgroundColor: color.palette.primary.dark, color: color.palette.primary.light, padding: \"0px 10px\" }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap className=\"wrap\" style={{ fontFamily: \"mosaic\" }} >\r\n                        MOSAIC\r\n                    </Typography>\r\n\r\n                    <Link to=\"/search\" style={{ color: \"inherit\" }} >\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, open && classes.hide)}\r\n                        >\r\n                            <SearchIcon />\r\n                        </IconButton>\r\n                    </Link>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {\r\n                        props.uid ? (\r\n                            <ListItem button key={\"signin1\"}>\r\n                                <ListItemText primary={props.email} />\r\n                            </ListItem>\r\n                        ) : (\r\n                                <div></div>\r\n                            )\r\n                    }\r\n                    {\r\n                        !props.uid ? (\r\n                            <div onClick={()=>{\r\n                                //window.Android.signin();\r\n                            }} >\r\n                                <ListItem button key={\"signin\"}>\r\n                                    <ListItemIcon><FaUser /></ListItemIcon>\r\n                                    <ListItemText primary=\"Sign In\" />\r\n                                </ListItem>\r\n                            </div>\r\n                        ) : (\r\n                                <div></div>\r\n                            )\r\n                    }\r\n                    {[\r\n                        { name: 'Premium', icon: <StarRoundedIcon /> }, { name: \"Trending\", icon: <FaBolt /> }, { name: 'Channels', icon: <FolderSpecialRounded /> },\r\n                        { name: 'Genres', icon: <FaTheaterMasks size=\"20px\" /> }, logOut].map((text, index) => (\r\n                            <Link to={text.to} >\r\n                                <ListItem button key={text}>\r\n                                    <ListItemIcon>{text.icon}</ListItemIcon>\r\n                                    <ListItemText primary={text.name} />\r\n                                </ListItem>\r\n                            </Link>\r\n                        ))}\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    {[{ name: 'About', icon: <InfoRounded />, to: \"/about\" }, { name: \"Help\", icon: <Help />, to: \"/help\" },\r\n                    { name: \"Feedback\", icon: <CommentRounded />, to: \"/feedback\" }].map((text, index) => (\r\n                        <Link to={text.to}  >\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{text.icon}</ListItemIcon>\r\n                                <ListItemText primary={text.name} />\r\n                            </ListItem>\r\n                        </Link>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n            <Toolbar />\r\n        </React.Fragment>\r\n    );\r\n}\r\n",["187","188"],"C:\\Users\\super\\.vscode\\ott\\src\\reportWebVitals.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getSeason.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Components\\Carousel.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getSubCollection.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":10,"column":10,"nodeType":"195","messageId":"196","endLine":10,"endColumn":20},{"ruleId":"197","severity":1,"message":"198","line":46,"column":5,"nodeType":"199","messageId":"200","endLine":49,"endColumn":6},{"ruleId":"193","severity":1,"message":"201","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":24},{"ruleId":"193","severity":1,"message":"202","line":8,"column":9,"nodeType":"195","messageId":"196","endLine":8,"endColumn":13},{"ruleId":"193","severity":1,"message":"203","line":24,"column":9,"nodeType":"195","messageId":"196","endLine":24,"endColumn":17},{"ruleId":"193","severity":1,"message":"204","line":77,"column":9,"nodeType":"195","messageId":"196","endLine":77,"endColumn":14},{"ruleId":"193","severity":1,"message":"205","line":85,"column":9,"nodeType":"195","messageId":"196","endLine":85,"endColumn":15},{"ruleId":"206","severity":1,"message":"207","line":194,"column":5,"nodeType":"208","messageId":"209","endLine":215,"endColumn":18},{"ruleId":"189","replacedBy":"210"},{"ruleId":"191","replacedBy":"211"},{"ruleId":"189","replacedBy":"212"},{"ruleId":"191","replacedBy":"213"},{"ruleId":"189","replacedBy":"214"},{"ruleId":"191","replacedBy":"215"},{"ruleId":"189","replacedBy":"216"},{"ruleId":"191","replacedBy":"217"},{"ruleId":"193","severity":1,"message":"218","line":7,"column":8,"nodeType":"195","messageId":"196","endLine":7,"endColumn":14},{"ruleId":"197","severity":1,"message":"198","line":38,"column":5,"nodeType":"199","messageId":"200","endLine":40,"endColumn":6},{"ruleId":"189","replacedBy":"219"},{"ruleId":"191","replacedBy":"220"},{"ruleId":"189","replacedBy":"221"},{"ruleId":"191","replacedBy":"222"},{"ruleId":"189","replacedBy":"223"},{"ruleId":"191","replacedBy":"224"},{"ruleId":"193","severity":1,"message":"225","line":6,"column":10,"nodeType":"195","messageId":"196","endLine":6,"endColumn":23},{"ruleId":"193","severity":1,"message":"226","line":6,"column":8,"nodeType":"195","messageId":"196","endLine":6,"endColumn":13},{"ruleId":"193","severity":1,"message":"227","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":21},{"ruleId":"228","severity":1,"message":"229","line":102,"column":7,"nodeType":"230","endLine":102,"endColumn":13,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":117,"column":44,"nodeType":"234","messageId":"235","endLine":117,"endColumn":46},{"ruleId":"189","replacedBy":"236"},{"ruleId":"191","replacedBy":"237"},{"ruleId":"189","replacedBy":"238"},{"ruleId":"191","replacedBy":"239"},{"ruleId":"193","severity":1,"message":"240","line":110,"column":12,"nodeType":"195","messageId":"196","endLine":110,"endColumn":18},{"ruleId":"189","replacedBy":"241"},{"ruleId":"191","replacedBy":"242"},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"no-unused-vars","'updateUser' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'getSubCollection' is defined but never used.","'data' is assigned a value but never used.","'episodes' is assigned a value but never used.","'ozark' is assigned a value but never used.","'bojack' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["243"],["244"],["243"],["244"],["243"],["244"],["243"],["244"],"'getDoc' is defined but never used.",["243"],["244"],["243"],["244"],["243"],["244"],"'FixedSizeList' is defined but never used.","'axios' is defined but never used.","'FaFacebookF' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'props.id', 'props.seasons', and 's'. Either include them or remove the dependency array.","ArrayExpression",["245"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["243"],["244"],["243"],["244"],"'signin' is assigned a value but never used.",["243"],["244"],"no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},"Update the dependencies array to be: [props.id, props.seasons, s, tabs]",{"range":"248","text":"249"},[2829,2835],"[props.id, props.seasons, s, tabs]"]