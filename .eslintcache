[{"C:\\Users\\super\\.vscode\\ott\\src\\Components\\Categories.js":"1","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Home.js":"2","C:\\Users\\super\\.vscode\\ott\\src\\Database\\uploadData.js":"3","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Category.js":"4","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Feedback.js":"5","C:\\Users\\super\\.vscode\\ott\\src\\index.js":"6","C:\\Users\\super\\.vscode\\ott\\src\\App.js":"7","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\SearchPage.js":"8","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\PlayScreen.js":"9","C:\\Users\\super\\.vscode\\ott\\src\\Database\\logIn.js":"10","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getDoc.js":"11","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Display.js":"12","C:\\Users\\super\\.vscode\\ott\\src\\Theme\\Theme.js":"13","C:\\Users\\super\\.vscode\\ott\\src\\firebase.js":"14","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Discover.js":"15","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getCollectionQuery.js":"16","C:\\Users\\super\\.vscode\\ott\\src\\Database\\shuffleArray.js":"17","C:\\Users\\super\\.vscode\\ott\\src\\Components\\MyList.js":"18","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Anime.js":"19","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Temp.js":"20","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getEpisode.js":"21","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Help.js":"22","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\About.js":"23","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Signin.js":"24","C:\\Users\\super\\.vscode\\ott\\src\\Components\\SeasonTabs.js":"25","C:\\Users\\super\\.vscode\\ott\\src\\Components\\SubAppBar.js":"26","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getCollection.js":"27","C:\\Users\\super\\.vscode\\ott\\src\\Components\\MyAppBar.js":"28","C:\\Users\\super\\.vscode\\ott\\src\\reportWebVitals.js":"29","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getSeason.js":"30","C:\\Users\\super\\.vscode\\ott\\src\\Components\\Carousel.js":"31","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getSubCollection.js":"32","C:\\Users\\super\\.vscode\\ott\\src\\Components\\ContinueWatching.js":"33","C:\\Users\\super\\.vscode\\ott\\src\\Components\\Cast.js":"34","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Series.js":"35","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\ShortFilms.js":"36","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Bollywood.js":"37"},{"size":2324,"mtime":1608792038583,"results":"38","hashOfConfig":"39"},{"size":3597,"mtime":1608860471577,"results":"40","hashOfConfig":"39"},{"size":4485,"mtime":1608816086763,"results":"41","hashOfConfig":"39"},{"size":2114,"mtime":1608818528664,"results":"42","hashOfConfig":"39"},{"size":3089,"mtime":1608863860922,"results":"43","hashOfConfig":"39"},{"size":500,"mtime":499162500000,"results":"44","hashOfConfig":"39"},{"size":5229,"mtime":1608859253097,"results":"45","hashOfConfig":"39"},{"size":2485,"mtime":1608484436779,"results":"46","hashOfConfig":"39"},{"size":10703,"mtime":1608790277609,"results":"47","hashOfConfig":"39"},{"size":1731,"mtime":1608492532991,"results":"48","hashOfConfig":"39"},{"size":1649,"mtime":1608294105622,"results":"49","hashOfConfig":"39"},{"size":14672,"mtime":1608772316447,"results":"50","hashOfConfig":"39"},{"size":390,"mtime":1606839707667,"results":"51","hashOfConfig":"39"},{"size":818,"mtime":1608216569772,"results":"52","hashOfConfig":"39"},{"size":1318,"mtime":1608711268379,"results":"53","hashOfConfig":"39"},{"size":2423,"mtime":1607760769241,"results":"54","hashOfConfig":"39"},{"size":269,"mtime":1607625601092,"results":"55","hashOfConfig":"39"},{"size":3062,"mtime":1608860371540,"results":"56","hashOfConfig":"39"},{"size":1972,"mtime":1608713199238,"results":"57","hashOfConfig":"39"},{"size":694,"mtime":1607936385771,"results":"58","hashOfConfig":"39"},{"size":515,"mtime":1607670187323,"results":"59","hashOfConfig":"39"},{"size":4729,"mtime":1608484415031,"results":"60","hashOfConfig":"39"},{"size":3143,"mtime":1608484384260,"results":"61","hashOfConfig":"39"},{"size":5441,"mtime":1607831178817,"results":"62","hashOfConfig":"39"},{"size":9723,"mtime":1608289389976,"results":"63","hashOfConfig":"39"},{"size":2087,"mtime":1607702370801,"results":"64","hashOfConfig":"39"},{"size":493,"mtime":1608768642815,"results":"65","hashOfConfig":"39"},{"size":6589,"mtime":1608522562226,"results":"66","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"67","hashOfConfig":"39"},{"size":660,"mtime":1607664182131,"results":"68","hashOfConfig":"39"},{"size":1486,"mtime":1608521840191,"results":"69","hashOfConfig":"39"},{"size":565,"mtime":1607874848929,"results":"70","hashOfConfig":"39"},{"size":3107,"mtime":1608393646596,"results":"71","hashOfConfig":"39"},{"size":1288,"mtime":1608519485101,"results":"72","hashOfConfig":"39"},{"size":1801,"mtime":1608718750533,"results":"73","hashOfConfig":"39"},{"size":452,"mtime":1608712339244,"results":"74","hashOfConfig":"39"},{"size":2115,"mtime":1608818522997,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m4booa",{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"89"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"89"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"119"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\super\\.vscode\\ott\\src\\Components\\Categories.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Home.js",["168","169"],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\uploadData.js",["170","171","172","173"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Category.js",[],["174","175"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Feedback.js",["176","177"],"C:\\Users\\super\\.vscode\\ott\\src\\index.js",[],["178","179"],"C:\\Users\\super\\.vscode\\ott\\src\\App.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\SearchPage.js",[],["180","181"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\PlayScreen.js",["182"],"import React, { Component } from 'react'\r\nimport { theme } from \"../Theme/Theme\"\r\nimport \"../CSS/Pages/Display.css\"\r\nimport \"../CSS/Pages/PlayScreen.css\"\r\nimport { IconButton } from '@material-ui/core'\r\nimport { ArrowBackRounded } from '@material-ui/icons'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport Loader from 'react-loader-spinner'\r\nimport ReadMoreAndLess from 'react-read-more-less';\r\nimport { useParams } from 'react-router-dom'\r\nimport SeasonTabs from '../Components/SeasonTabs'\r\nimport { saveTime } from '../Database/logIn'\r\nimport axios from 'axios'\r\nimport poster from '../Images/logo.jpg'\r\nimport Cast from '../Components/Cast';\r\nimport getDoc from \"../Database/getDoc\"\r\n//import video from \"../Videos/stone.mp4\"\r\n//import subs from \"../Videos/sub.vtt\"\r\nconst src = \"https://firebasestorage.googleapis.com/v0/b/project-ott-d883c.appspot.com/o/Hollywood%2FTV%2FStrangerThings%2FS1%2F%5BSubtitleTools.com%5D%20Stranger%20Things%20101%20Chapter%20One%20The%20Vanishing%20Of%20Will%20Byers%20By%20GoldBerg_44.vtt?alt=media&token=ad435e56-092a-417b-8da4-7acb8ce4ca50\"\r\nexport class Adapter extends Component {\r\n\r\n    state = {\r\n        mute: false,\r\n        cover: true,\r\n        show: null,\r\n        related: null,\r\n        seasons: null,\r\n        episode: null,\r\n        time: null,\r\n        duration: null,\r\n\r\n        season_id: null,\r\n        episode_id: null,\r\n        show_id: null,\r\n\r\n        currentTime: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*axios.post('https://us-central1-project-ott-d883c.cloudfunctions.net/widgets/get-doc', { //get-doc\r\n            name: \"Content\",\r\n            doc_name: this.props.id\r\n        }).then(snap => {\r\n            this.setState({ show: snap.data })\r\n            axios.post('https://us-central1-project-ott-d883c.cloudfunctions.net/widgets/add-watching', {\r\n                uid: window.Android.getUid(),\r\n                series_id: this.props.id,\r\n                episode: this.props.episode,\r\n                season: this.props.season,\r\n                poster: this.state.show.poster\r\n            })\r\n        })*/\r\n\r\n        getDoc(\"Content\", this.props.id).then(snap=>{\r\n            this.setState({show:snap});\r\n            axios.post('https://us-central1-project-ott-d883c.cloudfunctions.net/widgets/add-watching', {\r\n                uid: \"a\",//window.Android.getUid(),\r\n                series_id: this.props.id,\r\n                episode: this.props.episode,\r\n                season: this.props.season,\r\n                poster: this.state.show.poster\r\n            })\r\n        })\r\n\r\n        //get time\r\n        axios.post('https://us-central1-project-ott-d883c.cloudfunctions.net/widgets/get-time', { //get-time\r\n            id: this.props.id,\r\n            season: this.props.season,\r\n            episode: this.props.episode,\r\n            uid: \"a\"//window.Android.getUid()\r\n        }).then(snap => {\r\n            if (snap.data.time) {\r\n                this.setState({ currentTime: snap.data.time })\r\n            }\r\n\r\n            axios.post('https://us-central1-project-ott-d883c.cloudfunctions.net/widgets/get-episode', { //get-episode\r\n                id: this.props.id,\r\n                season: this.props.season,\r\n                episode: this.props.episode\r\n            }).then(snap => {\r\n                this.setState({ episode: snap.data })\r\n            })\r\n\r\n        })\r\n\r\n        this.setState({ episode_id: this.props.episode, season_id: this.props.season, show_id: this.props.id })\r\n    }\r\n\r\n    handleMute = () => {\r\n        if (this.state.mute) {\r\n            this.setState({ mute: false })\r\n        }\r\n        else {\r\n            this.setState({ mute: true })\r\n        }\r\n    }\r\n\r\n    handlevideoMount = (e) => {\r\n        if (e) {\r\n            if (this.state.currentTime > 0) {\r\n                e.currentTime = this.state.currentTime\r\n            }\r\n        }\r\n    }\r\n\r\n    componentCleanup = () => {\r\n        saveTime(this.state.time, this.state.show_id, this.state.season_id, this.state.episode_id).then(r => { })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.componentCleanup();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ color: theme.palette.primary.light }} >\r\n                {\r\n                    this.state.show && this.state.episode ? (\r\n                        <div>\r\n                            <div className=\"wrap\" style={{ overflow: \"hidden\", paddingBottom: '30px' }} >\r\n                                <div className=\"mute\">\r\n                                    <IconButton onClick={() => { window.history.back() }} >\r\n                                        <ArrowBackRounded style={{ color: \"white\", fontSize: \"20px\" }} />\r\n                                    </IconButton>\r\n                                </div>\r\n\r\n                                <video\r\n                                    loop={false}\r\n                                    controls\r\n                                    autoPlay\r\n                                    ref={this.handlevideoMount}\r\n                                    onTimeUpdate={(e) => { this.setState({ time: e.target.currentTime }) }}\r\n                                    controlsList=\"nodownload\"\r\n                                    poster={poster}\r\n                                    className=\"player\" >\r\n                                    <track label=\"English\" kind=\"subtitles\" srclang=\"en\" default src={this.state.episode.sub} />\r\n                                    <source src={this.state.episode.content} type=\"video/mp4\" />\r\n                                </video>\r\n\r\n                                {/*<Player poster={this.state.show.cover} >\r\n                                    <source src={this.state.episode.content} />\r\n                                    <BigPlayButton position=\"center\" />\r\n                                    <ControlBar>\r\n                                        <ReplayControl seconds={10} order={1.1} />\r\n                                        <ForwardControl seconds={30} order={1.2} />\r\n                                        <CurrentTimeDisplay order={4.1} />\r\n                                        <TimeDivider order={4.2} />\r\n                                        <PlaybackRateMenuButton rates={[5, 2, 1, 0.5, 0.1]} order={7.1} />\r\n                                        <VolumeMenuButton disabled />\r\n                                    </ControlBar>\r\n                            </Player>*/}\r\n\r\n                            </div>\r\n\r\n                            <div style={{ display: \"flex\", padding: \"0px 10px\", marginBottom: \"20px\" }} >\r\n                                <div className=\"list-item\"\r\n                                    style={{\r\n                                        backgroundImage: \"url(\" + this.state.show.poster + \")\",\r\n                                        width: \"90px\",\r\n                                        height: \"120px\",\r\n                                        marginRight: \"10px\"\r\n                                    }} >\r\n                                    {/*<img alt=\"ii\" src={this.state.show.poster} width=\"80px\" style={{ borderRadius: \"5px\", marginRight: '10px' }} />*/}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <div className=\"display-name\" style={{ marginBottom: \"0px\" }} >\r\n                                        {this.state.show.name}\r\n                                    </div>\r\n                                    <div className=\"display-type\" >\r\n                                        {this.state.episode.name}\r\n                                    </div>\r\n                                    <div className=\"display-type\" >\r\n                                        {this.state.number} {this.state.episode.date}\r\n                                    </div>\r\n                                    <div className=\"display-type\" >\r\n                                        {this.state.show.keywords}\r\n                                    </div>\r\n                                    <div className=\"display-type\" style={{ width: \"50vw\" }} >\r\n                                        <ReadMoreAndLess\r\n                                            ref={this.ReadMore}\r\n                                            className=\"display-type\"\r\n                                            charLimit={50}\r\n                                            readMoreText=\"Read more\"\r\n                                            readLessText=\"Read less\"\r\n                                        >\r\n                                            {this.state.show.description}\r\n                                        </ReadMoreAndLess>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {\r\n                                this.state.show.season ? (\r\n                                    <div>\r\n                                        <SeasonTabs seasons={this.state.show.season} id={this.state.show.id} />\r\n                                    </div>\r\n                                ) : (\r\n                                        <div></div>\r\n                                    )\r\n                            }\r\n\r\n                            {\r\n                                this.state.show.cast ? (\r\n                                    <div>\r\n                                        <Cast data={this.state.show.cast} />\r\n                                    </div>\r\n                                ) : (\r\n                                        <div></div>\r\n                                    )\r\n                            }\r\n                        </div>\r\n                    ) : (\r\n                            <div className=\"wrap\" style={{ minHeight: \"100vh\" }} >\r\n                                <div className=\"wrap\" style={{ minHeight: \"90vh\" }} >\r\n                                    <Loader\r\n                                        type=\"TailSpin\"\r\n                                        color={theme.palette.primary.light}\r\n                                        height={50}\r\n                                        width={50}\r\n                                        timeout={3000} //3 secs\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function PlayScreen() {\r\n    const { id } = useParams();\r\n    const { season } = useParams();\r\n    const { episode } = useParams();\r\n\r\n    return (\r\n        <Adapter id={id} season={season} episode={episode} />\r\n    )\r\n}\r\n","C:\\Users\\super\\.vscode\\ott\\src\\Database\\logIn.js",[],["183","184"],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getDoc.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Display.js",["185"],"import React, { Component } from 'react'\r\nimport { theme } from \"../Theme/Theme\"\r\nimport \"../CSS/Pages/Display.css\"\r\nimport \"../CSS/Components/MyList.css\"\r\nimport { IconButton } from '@material-ui/core'\r\nimport { ArrowBackRounded, PlayArrowRounded, VolumeMuteRounded, VolumeUpRounded } from '@material-ui/icons'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport Loader from 'react-loader-spinner'\r\nimport getSubCollection from '../Database/getSubCollection'\r\nimport { useParams } from 'react-router-dom'\r\nimport getDoc from \"../Database/getDoc\"\r\nimport { Link } from \"react-tiger-transition\";\r\nimport SeasonTabs from '../Components/SeasonTabs'\r\n//import axios from 'axios'\r\nimport Cast from '../Components/Cast';\r\n\r\n\r\nexport class Adapter extends Component {\r\n\r\n    state = {\r\n        mute: true,\r\n        cover: true,\r\n        show: null,\r\n        related: null,\r\n        seasons: null,\r\n        link: null,\r\n        open: null,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    findRelated = (industry, platform, genre) => {\r\n        getSubCollection(industry, platform, genre).then(snap => {\r\n            this.setState({ related: snap })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*axios.post('https://us-central1-project-ott-d883c.cloudfunctions.net/widgets/get-doc', { //get-doc\r\n            name: \"Content\",\r\n            doc_name: this.props.id\r\n        }).then(snap => {\r\n            this.setState({ show: snap.data })\r\n        })*/\r\n\r\n        getDoc(\"Content\",this.props.id).then(result=>{\r\n            this.setState({show:result})\r\n        })\r\n    }\r\n\r\n    handleMute = () => {\r\n        if (this.state.mute) {\r\n            this.setState({ mute: false })\r\n        }\r\n        else {\r\n            this.setState({ mute: true })\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ color: theme.palette.primary.light }} className=\"transition-item detail-page\" >\r\n                {\r\n                    this.state.show ? (\r\n                        <div className=\"w3-animate-bottom\" >\r\n                            <div className=\"wrap\" style={{ overflow: \"hidden\", paddingBottom: '30px'}} >\r\n                                <div className=\"mute\">\r\n                                    <Link to=\"/\" transition='glide-left'  >\r\n                                        <IconButton >\r\n                                            <ArrowBackRounded style={{ color: \"white\", fontSize: \"20px\" }} />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                    {\r\n                                        this.state.mute ? (\r\n                                            <IconButton onClick={this.handleMute} >\r\n                                                <VolumeMuteRounded style={{ color: \"white\", fontSize: \"20px\" }} />\r\n                                            </IconButton>\r\n                                        ) : (\r\n                                                <IconButton onClick={this.handleMute} >\r\n                                                    <VolumeUpRounded style={{ color: \"white\", fontSize: \"20px\" }} />\r\n                                                </IconButton>\r\n                                            )\r\n                                    }\r\n                                </div>\r\n\r\n                                <video\r\n                                    autoPlay={true}\r\n                                    loop={false}\r\n                                    muted={this.state.mute}\r\n                                    style={{ height: \"100%\" }}\r\n                                    className=\"cover-image\">\r\n                                    <source src={this.state.show.trailer} className=\"cover-image\" />\r\n                                </video>\r\n                            </div>\r\n                            <div className=\"wrap\" style={{ marginBottom: \"30px\" }} >\r\n                                <div className=\"wrap play-button\" >\r\n                                    <Link to={\"/play/\" + this.state.show.id + \"/Season-1/episode-01\"} >\r\n                                        <IconButton>\r\n                                            <PlayArrowRounded style={{ fontSize: \"40px\", color: \"black\" }} />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"display-name wrap\" >\r\n                                {this.state.show.name}\r\n                            </div>\r\n                            <div className=\"wrap display-type\" >\r\n                                {this.state.show.keywords}\r\n                            </div>\r\n\r\n                            <div className=\"wrap\" style={{ flexWrap: \"nowrap\", margin: \"20px 0px\" }} >\r\n                                <div style={{ margin: \"0px 20px\", width: \"33%\" }} >\r\n                                    <div className=\"display-type wrap\" >\r\n                                        Year\r\n                                    </div>\r\n                                    <div className=\"wrap\" >\r\n                                        {this.state.show.year}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"wrap\" style={{ margin: \"0px 20px\", width: \"33%\" }}  >\r\n                                    <div>\r\n                                        <div className=\"display-type wrap\" >\r\n                                            Country\r\n                                        </div>\r\n                                        <div className=\"wrap\" >\r\n                                            {this.state.show.country}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ margin: \"0px 20px\", width: \"33%\" }}  >\r\n                                    <div className=\"display-type wrap\" >\r\n                                        Length\r\n                                    </div>\r\n                                    <div className=\"wrap\" >\r\n                                        {this.state.show.leng}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/*<div>\r\n                                <div className=\"display-type wrap\" >\r\n                                    A Product Of\r\n                                </div>\r\n                                <div className=\"wrap\" >\r\n                                    <img alt=\"app\" src={this.state.show.app} width=\"30px\" style={{ marginRight: \"10px\", borderRadius: \"5px\" }} />\r\n                                    {this.state.show.appName}\r\n                                </div>\r\n                            </div>*/}\r\n\r\n                            {/*<div className=\"wrap\" style={{ margin: \"20px 0px\" }} >\r\n                                <ButtonBase>\r\n                                    <div className=\"rent-button\">\r\n                                        <div className=\"wrap display-type\" style={{ color: \"white\" }} >Rent</div>\r\n                                        <div className=\"wrap \" >&#8377;20 /month</div>\r\n                                    </div>\r\n                                </ButtonBase>\r\n                            </div>*/}\r\n\r\n                            <div style={{ padding: '20px', textAlign: \"center\" }} className=\"display-type\" >\r\n                                {this.state.show.description}\r\n                            </div>\r\n\r\n                            {\r\n                                this.state.show.season ? (\r\n                                    <div>\r\n                                        <SeasonTabs seasons={this.state.show.season} id={this.state.show.id} />\r\n                                    </div>\r\n                                ) : (\r\n                                        <div></div>\r\n                                    )\r\n                            }\r\n\r\n                            {/*\r\n                                this.state.related ? (\r\n                                    <div>\r\n                                        <div className=\"h7\" >\r\n                                            Related\r\n                                        </div>\r\n                                        <div className=\"ss-container\" >\r\n                                            {\r\n                                                this.state.related.map(item => {\r\n                                                    return (\r\n                                                        <ButtonBase style={{ height: \"100%\", marginRight: \"20px\" }}>\r\n                                                            <a href={\"/display/\" + item.industry + \"/\" + item.platform + \"/\" + item.genre + \"/\" + item.id}\r\n                                                                style={{ height: \"100%\" }}  >\r\n                                                                <div className=\"list-item wrap\" style={{ backgroundImage: \"url(\" + item.poster + \")\" }} >\r\n\r\n                                                                </div>\r\n                                                            </a>\r\n                                                        </ButtonBase>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                        <div></div>\r\n                                    )\r\n                            */}\r\n                            {\r\n                                this.state.show.cast ? (\r\n                                    <div>\r\n                                        <Cast data={this.state.show.cast} />\r\n                                    </div>\r\n                                ): (\r\n                                    <div></div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    ) : (\r\n                            <div className=\"wrap\" style={{ minHeight: \"90vh\" }} >\r\n                                <Loader\r\n                                    type=\"TailSpin\"\r\n                                    color={theme.palette.primary.light}\r\n                                    height={50}\r\n                                    width={50}\r\n                                    timeout={3000} //3 secs\r\n                                />\r\n                            </div>\r\n                        )\r\n                }\r\n\r\n                {/*<Dialog fullScreen open={this.state.open} TransitionComponent={Transition} style={{ marginTop: \"30%\", boxShadow: \"0px -10px 20px rgba(0,0,0,0.5)\", backgroundColor: theme.palette.primary.dark, color: theme.palette.primary.light }} >\r\n                    <AppBar position=\"relative\" elevation={0} style={{ backgroundColor: theme.palette.primary.dark, color: theme.palette.primary.light }} >\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={this.handleClose} aria-label=\"close\">\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    {\r\n                        this.state.show ? (\r\n                            <div>\r\n                                <div>\r\n                                    <div className=\"wrap\" >\r\n                                        <div className=\"list-item wrap\" style={{ backgroundImage: \"url(\" + this.state.show.poster + \")\", margin: '15px' }} >\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div >\r\n                                        <div>\r\n                                            <div className=\"wrap\" >\r\n                                                <div style={{ marginRight: \"10px\" }} >\r\n                                                    <img className=\"app-logo\" alt=\"logo\" src={this.state.show.app} width=\"30px\" />\r\n                                                </div>\r\n                                                <div>\r\n                                                    {this.state.show.appName}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"wrap\" style={{ margin: \"20px 0px\" }} >\r\n                                                <ButtonBase>\r\n                                                    <div className=\"rent-button\">\r\n                                                        <div className=\"wrap display-type\" style={{ color: \"white\" }} >Rent</div>\r\n                                                        <div className=\"wrap \" >&#8377;20 /month</div>\r\n                                                    </div>\r\n                                                </ButtonBase>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"wrap display-type\" style={{ textAlign: \"center\", marginBottom: \"20px\" }} >\r\n                                    Why buy expensive yearly or monthly packages and subscriptions. When you can rent for less?\r\n                                </div>\r\n                                <div className=\"h7\" >\r\n                                    Recommended Plans\r\n                                </div>\r\n\r\n                            </div>\r\n                        ) : (\r\n                                <div></div>\r\n                            )\r\n                    }\r\n                </Dialog>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function Display() {\r\n    const { industry } = useParams();\r\n    const { platform } = useParams();\r\n    const { genre } = useParams();\r\n    const { id } = useParams();\r\n\r\n    React.useEffect(() => {\r\n    }, [industry]);\r\n\r\n    return (\r\n        <Adapter industry={industry} platform={platform} genre={genre} id={id} />\r\n    )\r\n}\r\n","C:\\Users\\super\\.vscode\\ott\\src\\Theme\\Theme.js",[],["186","187"],"C:\\Users\\super\\.vscode\\ott\\src\\firebase.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Discover.js",["188"],"import React, { Component } from 'react'\r\nimport MyList from '../../Components/MyList'\r\nimport SubAppBar from '../../Components/SubAppBar'\r\n\r\nconst list = [\r\n    {\r\n        title: \"ROFL Things\",\r\n        filter: \"Comedy\"\r\n    },\r\n    {\r\n        title: \"Anytime Watch\",\r\n        filter: [\"Drama\",\"Series\"]\r\n    },\r\n    {\r\n        title: \"ROFL Things\",\r\n        filter: \"Animation\"\r\n    },\r\n    {\r\n        title: \"ROFL Things\",\r\n        filter: \"Animation\"\r\n    },\r\n    {\r\n        title: \"ROFL Things\",\r\n        filter: \"Animation\"\r\n    },\r\n    {\r\n        title: \"ROFL Things\",\r\n        filter: \"Animation\"\r\n    },\r\n]\r\n\r\nexport class Discover extends Component {\r\n\r\n    state = {\r\n        data: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SubAppBar />\r\n                <MyList title=\"Top Rated On IMDb\" filter=\"Animation\" />\r\n                <MyList title=\"ROFL Things\" filter=\"Comedy\" />\r\n                <MyList title=\"Anytime Watch\" filter={[\"Drama\",\"Series\"]} />\r\n                <MyList title=\"By Netflix\" filter=\"Netflix\" />\r\n                <MyList title=\"By Disney+Hotstar\" filter=\"Disney+Hotstar\" />\r\n                <MyList title=\"By TVF\" filter=\"TVF\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Discover\r\n","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getCollectionQuery.js",[],["189","190"],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\shuffleArray.js",[],["191","192"],"C:\\Users\\super\\.vscode\\ott\\src\\Components\\MyList.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Anime.js",[],["193","194"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Temp.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getEpisode.js",[],["195","196"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Help.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\About.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Signin.js",["197"],"import React, { Component } from 'react'\r\nimport SubAppBar from \"../Components/SubAppBar\"\r\nimport { FaFacebookF, FaGooglePlusG } from \"react-icons/fa\"\r\n\r\nexport class Signin extends Component {\r\n\r\n    state = {\r\n        pw: null,\r\n        userEmail: \"\",\r\n        cpw: null,\r\n        error: null,\r\n        phone: \"\",\r\n    }\r\n\r\n    responseGoogle = () => {\r\n        window.Android.signin();\r\n    }\r\n\r\n    responseEmail = (e) => {\r\n        e.preventDefault()\r\n        if (this.state.pw === this.state.cpw) {\r\n            window.Android.emailsignin(this.state.userEmail, this.state.pw);\r\n        } else if (this.state.pw !== this.state.cpw) {\r\n            this.setState({ error: \"Passwords do not match.\" })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SubAppBar />\r\n\r\n                <div>\r\n                    <h2 className=\"wrap\" >\r\n                        Sign In\r\n                    </h2>\r\n                    {/*<div className=\"wrap\" >\r\n                        Sign in by Phone.\r\n                    </div>\r\n                    <form style={{ padding: \"10px\" }} onSubmit={(e) => { this.responseEmail(e) }} >\r\n                        <div>\r\n                            <label>Phone</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"phone\" name=\"phone\" required placeholder=\"Phone\" value={this.state.phone} onChange={(e) => { this.setState({ phone: e.target.value }) }} />\r\n                        </div>\r\n                        {\r\n                            this.state.phone.length > 9 && this.state.userEmail.length < 1 ? (\r\n                                <div className=\"wrap\" >\r\n                                    <input type=\"submit\" value=\"Get OTP\" />\r\n                                </div>\r\n                            ) : (\r\n                                    <div></div>\r\n                                )\r\n                        }\r\n                    </form>*/}\r\n\r\n                    <div className=\"wrap\" >\r\n                        Sign in by e-mail.\r\n                    </div>\r\n                    <form style={{ padding: \"10px\" }} onSubmit={(e) => { this.responseEmail(e) }} >\r\n                        <div>\r\n                            <label>Email</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"email\" name=\"email\" required placeholder=\"Email\" value={this.state.userEmail} onChange={(e) => { this.setState({ userEmail: e.target.value }) }} />\r\n                        </div>\r\n                        {\r\n                            this.state.userEmail.length > 0 ? (\r\n                                <div>\r\n                                    <div>\r\n                                        <label>Password</label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input id=\"pw\" name=\"pw\" required placeholder=\"Password\" value={this.state.pw} onChange={(e) => { this.setState({ pw: e.target.value }) }} />\r\n                                    </div>\r\n                                    <div>\r\n                                        <label>Confirm Password</label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input id=\"cpw\" name=\"cpw\" required placeholder=\"Confirm Password\" value={this.state.cpw} onChange={(e) => { this.setState({ cpw: e.target.value }) }} />\r\n                                    </div>\r\n                                    <div className=\"wrap\" >\r\n                                        <input type=\"submit\" value=\"Sign In\" />\r\n                                    </div>\r\n                                    <div>\r\n                                        {this.state.error}\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                    <div>\r\n\r\n                                    </div>\r\n                                )\r\n                        }\r\n                    </form>\r\n                </div>\r\n\r\n                <p className=\"wrap\" >\r\n                    <h3>\r\n                        Other Sign In Options\r\n                    </h3>\r\n                </p>\r\n\r\n                <div className=\"wrap\">\r\n                    <div>\r\n                        <div className=\"wrap\" >\r\n                            <div onClick={this.responseGoogle} className=\"wrap\"\r\n                                style={{\r\n                                    borderRadius: \"5px\",\r\n                                    boxShadow: \"0px 0px 5px\",\r\n                                    padding: \"10px\",\r\n                                    backgroundColor: \"#D54836\",\r\n                                    color: \"white\",\r\n                                    justifyContent: \"space-between\",\r\n                                    margin: \"10px\"\r\n                                }} >\r\n                                <FaGooglePlusG size=\"20px\" style={{ marginRight: \"10px\" }} />\r\n                                <div>\r\n                                    Google\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signin\r\n","C:\\Users\\super\\.vscode\\ott\\src\\Components\\SeasonTabs.js",["198","199"],"import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { theme as color } from '../Theme/Theme'\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport \"../CSS/Pages/Display.css\"\r\nimport \"../CSS/Components/MyList.css\"\r\nimport getSubCollection from '../Database/getSubCollection';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3} style={{ padding: \"10px 0px\" }} >\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\n\r\nconst StyledTabs = withStyles({\r\n    indicator: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'transparent',\r\n        '& > span': {\r\n            maxWidth: 40,\r\n            width: '100%',\r\n            backgroundColor: '#fff',\r\n        },\r\n    },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        color: '#fff',\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        fontSize: theme.typography.pxToRem(15),\r\n        marginRight: theme.spacing(1),\r\n        '&:focus': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    padding: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    demo2: {\r\n        backgroundColor: color.palette.primary.dark,\r\n    },\r\n}));\r\n\r\n\r\nexport default class SeasonTabs extends React.Component {\r\n\r\n    state = {\r\n        value: 0,\r\n        tabs: [],\r\n        s: []\r\n    }\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.setState({ value: newValue });\r\n    };\r\n\r\n    componentDidMount() {\r\n        var i = 0;\r\n\r\n        for (i; i < parseInt(this.props.seasons); i++) {\r\n            this.state.tabs.push(\r\n                <StyledTab label={\"Season \" + (i + 1)} />\r\n            )\r\n            getSubCollection(\"Content\", this.props.id, \"Season-\" + (i + 1)).then(r => {\r\n                this.state.s.push(r)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <StyledTabs value={this.state.value} variant=\"scrollable\" scrollButtons=\"auto\" onChange={this.handleChange} aria-label=\"styled tabs example\">\r\n                        {\r\n                            this.state.tabs.map(item => {\r\n                                return (\r\n                                    item\r\n                                )\r\n                            })\r\n                        }\r\n                    </StyledTabs>\r\n                    {\r\n                        this.state.tabs &&\r\n                        this.state.tabs.map((item, index) => {\r\n                            if (index < 9) {\r\n                                return (\r\n                                    <TabPanel value={this.state.value} index={index}>\r\n                                        <div className=\"ss-container\" >\r\n                                            {\r\n                                                this.state.s[index] &&\r\n                                                this.state.s[index].map((i, episode) => {\r\n                                                    if (episode < 9) {\r\n                                                        return (\r\n                                                            <a href={\"/play/\" + this.props.id + \"/Season-\" + (index + 1) + \"/episode-0\" + (episode + 1)} >\r\n                                                                <div style={{\r\n                                                                    background: \"url(\" + i.image + \")\",\r\n                                                                    backgroundSize: \"cover\",\r\n                                                                    backgroundPosition: \"center\",\r\n                                                                    height: \"30vw\",\r\n                                                                    width: \"45vw\",\r\n                                                                    marginRight: \"10px\",\r\n                                                                    borderRadius: \"2px\",\r\n                                                                    boxShadow: \"0px 10px 10px  rgba(0, 0, 0, 0.5)\",\r\n                                                                    display: \"flex\",\r\n                                                                    flexDirection: \"column\",\r\n                                                                    justifyContent: \"flex-end\"\r\n                                                                }} >\r\n                                                                </div>\r\n                                                                <div style={{ fontSize: \"12px\", textOverflow: \"ellipsis\", width: \"40vw\", whiteSpace: \"nowrap\", overflow: \"hidden\", marginTop: \"10px\" }} >\r\n                                                                    {i.name}\r\n                                                                </div>\r\n                                                                <div style={{ fontSize: \"10px\", color: \"grey\", textTransform: \"uppercase\" }} >\r\n                                                                    Season-{(index + 1)} Episode-{(episode + 1)}\r\n                                                                </div>\r\n                                                                <div style={{ fontSize: \"10px\", color: \"grey\", textTransform: \"uppercase\" }} >\r\n                                                                    {i.date}\r\n                                                                </div>\r\n                                                            </a>\r\n                                                        )\r\n                                                    } else {\r\n                                                        return (\r\n                                                            <a href={\"/play/\" + this.props.id + \"/Season-\" + (index + 1) + \"/episode-\" + (episode + 1)} >\r\n                                                                <div style={{\r\n                                                                    background: \"url(\" + i.image + \")\",\r\n                                                                    backgroundSize: \"cover\",\r\n                                                                    backgroundPosition: \"center\",\r\n                                                                    height: \"30vw\",\r\n                                                                    width: \"45vw\",\r\n                                                                    marginRight: \"10px\",\r\n                                                                    borderRadius: \"2px\",\r\n                                                                    boxShadow: \"0px 10px 10px  rgba(0, 0, 0, 0.5)\",\r\n                                                                    display: \"flex\",\r\n                                                                    flexDirection: \"column\",\r\n                                                                    justifyContent: \"flex-end\"\r\n                                                                }} >\r\n                                                                </div>\r\n                                                                <div style={{ fontSize: \"12px\", textOverflow: \"ellipsis\", width: \"40vw\", whiteSpace: \"nowrap\", overflow: \"hidden\", marginTop: \"10px\" }} >\r\n                                                                    {i.name}\r\n                                                                </div>\r\n                                                                <div style={{ fontSize: \"10px\", color: \"grey\", textTransform: \"uppercase\" }} >\r\n                                                                    Season-{(index + 1)} Episode-{(episode + 1)}\r\n                                                                </div>\r\n                                                                <div style={{ fontSize: \"10px\", color: \"grey\", textTransform: \"uppercase\" }} >\r\n                                                                    {i.date}\r\n                                                                </div>\r\n                                                            </a>\r\n                                                        )\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </TabPanel>\r\n                                )\r\n                            } else {\r\n\r\n                            }\r\n                        })\r\n                    }\r\n                    <Typography />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Users\\super\\.vscode\\ott\\src\\Components\\SubAppBar.js",[],["200","201"],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getCollection.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Components\\MyAppBar.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\reportWebVitals.js",[],["202","203"],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getSeason.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Components\\Carousel.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getSubCollection.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Components\\ContinueWatching.js",[],["204","205"],"C:\\Users\\super\\.vscode\\ott\\src\\Components\\Cast.js",[],["206","207"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Series.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\ShortFilms.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Bollywood.js",[],{"ruleId":"208","severity":1,"message":"209","line":11,"column":10,"nodeType":"210","messageId":"211","endLine":11,"endColumn":20},{"ruleId":"212","severity":1,"message":"213","line":26,"column":5,"nodeType":"214","messageId":"215","endLine":29,"endColumn":6},{"ruleId":"208","severity":1,"message":"216","line":7,"column":9,"nodeType":"210","messageId":"211","endLine":7,"endColumn":10},{"ruleId":"208","severity":1,"message":"217","line":9,"column":9,"nodeType":"210","messageId":"211","endLine":9,"endColumn":13},{"ruleId":"208","severity":1,"message":"218","line":27,"column":9,"nodeType":"210","messageId":"211","endLine":27,"endColumn":17},{"ruleId":"208","severity":1,"message":"219","line":35,"column":11,"nodeType":"210","messageId":"211","endLine":35,"endColumn":15},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"208","severity":1,"message":"224","line":4,"column":8,"nodeType":"210","messageId":"211","endLine":4,"endColumn":13},{"ruleId":"208","severity":1,"message":"225","line":5,"column":10,"nodeType":"210","messageId":"211","endLine":5,"endColumn":12},{"ruleId":"220","replacedBy":"226"},{"ruleId":"222","replacedBy":"227"},{"ruleId":"220","replacedBy":"228"},{"ruleId":"222","replacedBy":"229"},{"ruleId":"208","severity":1,"message":"230","line":19,"column":7,"nodeType":"210","messageId":"211","endLine":19,"endColumn":10},{"ruleId":"220","replacedBy":"231"},{"ruleId":"222","replacedBy":"232"},{"ruleId":"212","severity":1,"message":"213","line":30,"column":5,"nodeType":"214","messageId":"215","endLine":32,"endColumn":6},{"ruleId":"220","replacedBy":"233"},{"ruleId":"222","replacedBy":"234"},{"ruleId":"208","severity":1,"message":"235","line":5,"column":7,"nodeType":"210","messageId":"211","endLine":5,"endColumn":11},{"ruleId":"220","replacedBy":"236"},{"ruleId":"222","replacedBy":"237"},{"ruleId":"220","replacedBy":"238"},{"ruleId":"222","replacedBy":"239"},{"ruleId":"220","replacedBy":"240"},{"ruleId":"222","replacedBy":"241"},{"ruleId":"220","replacedBy":"242"},{"ruleId":"222","replacedBy":"243"},{"ruleId":"208","severity":1,"message":"244","line":3,"column":10,"nodeType":"210","messageId":"211","endLine":3,"endColumn":21},{"ruleId":"208","severity":1,"message":"245","line":66,"column":7,"nodeType":"210","messageId":"211","endLine":66,"endColumn":16},{"ruleId":"246","severity":1,"message":"247","line":120,"column":59,"nodeType":"248","messageId":"249","endLine":120,"endColumn":61},{"ruleId":"220","replacedBy":"250"},{"ruleId":"222","replacedBy":"251"},{"ruleId":"220","replacedBy":"252"},{"ruleId":"222","replacedBy":"253"},{"ruleId":"220","replacedBy":"254"},{"ruleId":"222","replacedBy":"255"},{"ruleId":"220","replacedBy":"256"},{"ruleId":"222","replacedBy":"257"},"no-unused-vars","'updateUser' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'i' is assigned a value but never used.","'data' is assigned a value but never used.","'episodes' is assigned a value but never used.","'cast' is assigned a value but never used.","no-native-reassign",["258"],"no-negated-in-lhs",["259"],"'axios' is defined but never used.","'db' is defined but never used.",["258"],["259"],["258"],["259"],"'src' is assigned a value but never used.",["258"],["259"],["258"],["259"],"'list' is assigned a value but never used.",["258"],["259"],["258"],["259"],["258"],["259"],["258"],["259"],"'FaFacebookF' is defined but never used.","'useStyles' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["258"],["259"],["258"],["259"],["258"],["259"],["258"],["259"],"no-global-assign","no-unsafe-negation"]