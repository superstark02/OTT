[{"C:\\Users\\super\\.vscode\\ott\\src\\Components\\Categories.js":"1","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Home.js":"2","C:\\Users\\super\\.vscode\\ott\\src\\Database\\uploadData.js":"3","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Category.js":"4","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Feedback.js":"5","C:\\Users\\super\\.vscode\\ott\\src\\index.js":"6","C:\\Users\\super\\.vscode\\ott\\src\\App.js":"7","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\SearchPage.js":"8","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\PlayScreen.js":"9","C:\\Users\\super\\.vscode\\ott\\src\\Database\\logIn.js":"10","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getDoc.js":"11","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Display.js":"12","C:\\Users\\super\\.vscode\\ott\\src\\Theme\\Theme.js":"13","C:\\Users\\super\\.vscode\\ott\\src\\firebase.js":"14","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Discover.js":"15","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getCollectionQuery.js":"16","C:\\Users\\super\\.vscode\\ott\\src\\Database\\shuffleArray.js":"17","C:\\Users\\super\\.vscode\\ott\\src\\Components\\MyList.js":"18","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Anime.js":"19","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Temp.js":"20","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getEpisode.js":"21","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Help.js":"22","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\About.js":"23","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Signin.js":"24","C:\\Users\\super\\.vscode\\ott\\src\\Components\\SeasonTabs.js":"25","C:\\Users\\super\\.vscode\\ott\\src\\Components\\SubAppBar.js":"26","C:\\Users\\super\\.vscode\\ott\\src\\Pages\\FileUpload.js":"27","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getCollection.js":"28","C:\\Users\\super\\.vscode\\ott\\src\\Components\\MyAppBar.js":"29","C:\\Users\\super\\.vscode\\ott\\src\\reportWebVitals.js":"30","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getSeason.js":"31","C:\\Users\\super\\.vscode\\ott\\src\\Components\\Carousel.js":"32","C:\\Users\\super\\.vscode\\ott\\src\\Database\\getSubCollection.js":"33","C:\\Users\\super\\.vscode\\ott\\src\\Database\\uploadFile.js":"34","C:\\Users\\super\\.vscode\\ott\\src\\Components\\ContinueWatching.js":"35","C:\\Users\\super\\.vscode\\ott\\src\\Components\\Cast.js":"36"},{"size":2320,"mtime":1608081704057,"results":"37","hashOfConfig":"38"},{"size":3679,"mtime":1608691377719,"results":"39","hashOfConfig":"38"},{"size":3257,"mtime":1608703765539,"results":"40","hashOfConfig":"38"},{"size":2114,"mtime":1608484665445,"results":"41","hashOfConfig":"38"},{"size":2330,"mtime":1608490667742,"results":"42","hashOfConfig":"38"},{"size":500,"mtime":499162500000,"results":"43","hashOfConfig":"38"},{"size":4839,"mtime":1607936122194,"results":"44","hashOfConfig":"38"},{"size":2485,"mtime":1608484436779,"results":"45","hashOfConfig":"38"},{"size":9904,"mtime":1608651458028,"results":"46","hashOfConfig":"38"},{"size":1731,"mtime":1608492532991,"results":"47","hashOfConfig":"38"},{"size":1681,"mtime":1608173339538,"results":"48","hashOfConfig":"38"},{"size":14559,"mtime":1608494300201,"results":"49","hashOfConfig":"38"},{"size":390,"mtime":1606839707667,"results":"50","hashOfConfig":"38"},{"size":818,"mtime":1608216569772,"results":"51","hashOfConfig":"38"},{"size":750,"mtime":1607757223729,"results":"52","hashOfConfig":"38"},{"size":2423,"mtime":1607760769241,"results":"53","hashOfConfig":"38"},{"size":269,"mtime":1607625601092,"results":"54","hashOfConfig":"38"},{"size":3128,"mtime":1608484234788,"results":"55","hashOfConfig":"38"},{"size":2000,"mtime":1608053167774,"results":"56","hashOfConfig":"38"},{"size":694,"mtime":1607936385771,"results":"57","hashOfConfig":"38"},{"size":515,"mtime":1607670187323,"results":"58","hashOfConfig":"38"},{"size":4729,"mtime":1608484415031,"results":"59","hashOfConfig":"38"},{"size":3143,"mtime":1608484384260,"results":"60","hashOfConfig":"38"},{"size":5441,"mtime":1607831178817,"results":"61","hashOfConfig":"38"},{"size":9723,"mtime":1608289389976,"results":"62","hashOfConfig":"38"},{"size":2087,"mtime":1607702370801,"results":"63","hashOfConfig":"38"},{"size":1452,"mtime":1607599628422,"results":"64","hashOfConfig":"38"},{"size":493,"mtime":1606467525268,"results":"65","hashOfConfig":"38"},{"size":6589,"mtime":1608522562226,"results":"66","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"67","hashOfConfig":"38"},{"size":660,"mtime":1607664182131,"results":"68","hashOfConfig":"38"},{"size":1486,"mtime":1608521840191,"results":"69","hashOfConfig":"38"},{"size":565,"mtime":1607874848929,"results":"70","hashOfConfig":"38"},{"size":1224,"mtime":1608293898806,"results":"71","hashOfConfig":"38"},{"size":3107,"mtime":1608393646596,"results":"72","hashOfConfig":"38"},{"size":1288,"mtime":1608519485101,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1m4booa",{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"123"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"C:\\Users\\super\\.vscode\\ott\\src\\Components\\Categories.js",[],["164","165"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Home.js",["166"],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\uploadData.js",["167","168"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Category.js",[],["169","170"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Feedback.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\index.js",[],["171","172"],"C:\\Users\\super\\.vscode\\ott\\src\\App.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\SearchPage.js",[],["173","174"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\PlayScreen.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\logIn.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getDoc.js",[],["175","176"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Display.js",["177","178"],"import React, { Component } from 'react'\r\nimport { theme } from \"../Theme/Theme\"\r\nimport \"../CSS/Pages/Display.css\"\r\nimport \"../CSS/Components/MyList.css\"\r\nimport { IconButton } from '@material-ui/core'\r\nimport { ArrowBackRounded, PlayArrowRounded, VolumeMuteRounded, VolumeUpRounded } from '@material-ui/icons'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport Loader from 'react-loader-spinner'\r\nimport getSubCollection from '../Database/getSubCollection'\r\nimport { useParams } from 'react-router-dom'\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Link } from \"react-tiger-transition\";\r\nimport SeasonTabs from '../Components/SeasonTabs'\r\nimport axios from 'axios'\r\nimport Cast from '../Components/Cast';\r\n\r\n\r\nexport class Adapter extends Component {\r\n\r\n    state = {\r\n        mute: true,\r\n        cover: true,\r\n        show: null,\r\n        related: null,\r\n        seasons: null,\r\n        link: null,\r\n        open: null,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    findRelated = (industry, platform, genre) => {\r\n        getSubCollection(industry, platform, genre).then(snap => {\r\n            this.setState({ related: snap })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.post('https://us-central1-project-ott-d883c.cloudfunctions.net/widgets/get-doc', { //get-doc\r\n            name: \"Content\",\r\n            doc_name: this.props.id\r\n        }).then(snap => {\r\n            this.setState({ show: snap.data })\r\n        })\r\n    }\r\n\r\n    handleMute = () => {\r\n        if (this.state.mute) {\r\n            this.setState({ mute: false })\r\n        }\r\n        else {\r\n            this.setState({ mute: true })\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ color: theme.palette.primary.light }} className=\"transition-item detail-page\" >\r\n                {\r\n                    this.state.show ? (\r\n                        <div className=\"w3-animate-bottom\" >\r\n                            <div className=\"wrap\" style={{ overflow: \"hidden\", paddingBottom: '30px'}} >\r\n                                <div className=\"mute\">\r\n                                    <Link to=\"/\" transition='glide-left'  >\r\n                                        <IconButton >\r\n                                            <ArrowBackRounded style={{ color: \"white\", fontSize: \"20px\" }} />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                    {\r\n                                        this.state.mute ? (\r\n                                            <IconButton onClick={this.handleMute} >\r\n                                                <VolumeMuteRounded style={{ color: \"white\", fontSize: \"20px\" }} />\r\n                                            </IconButton>\r\n                                        ) : (\r\n                                                <IconButton onClick={this.handleMute} >\r\n                                                    <VolumeUpRounded style={{ color: \"white\", fontSize: \"20px\" }} />\r\n                                                </IconButton>\r\n                                            )\r\n                                    }\r\n                                </div>\r\n\r\n                                <video\r\n                                    autoPlay={true}\r\n                                    loop={false}\r\n                                    muted={this.state.mute}\r\n                                    style={{ height: \"100%\" }}\r\n                                    className=\"cover-image\">\r\n                                    <source src={this.state.show.trailer} className=\"cover-image\" />\r\n                                </video>\r\n                            </div>\r\n                            <div className=\"wrap\" style={{ marginBottom: \"30px\" }} >\r\n                                <div className=\"wrap play-button\" >\r\n                                    <Link to={\"/play/\" + this.state.show.id + \"/Season-1/episode-01\"} >\r\n                                        <IconButton>\r\n                                            <PlayArrowRounded style={{ fontSize: \"40px\", color: \"black\" }} />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"display-name wrap\" >\r\n                                {this.state.show.name}\r\n                            </div>\r\n                            <div className=\"wrap display-type\" >\r\n                                {this.state.show.keywords}\r\n                            </div>\r\n\r\n                            <div className=\"wrap\" style={{ flexWrap: \"nowrap\", margin: \"20px 0px\" }} >\r\n                                <div style={{ margin: \"0px 20px\", width: \"33%\" }} >\r\n                                    <div className=\"display-type wrap\" >\r\n                                        Year\r\n                                    </div>\r\n                                    <div className=\"wrap\" >\r\n                                        {this.state.show.year}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"wrap\" style={{ margin: \"0px 20px\", width: \"33%\" }}  >\r\n                                    <div>\r\n                                        <div className=\"display-type wrap\" >\r\n                                            Country\r\n                                        </div>\r\n                                        <div className=\"wrap\" >\r\n                                            {this.state.show.country}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ margin: \"0px 20px\", width: \"33%\" }}  >\r\n                                    <div className=\"display-type wrap\" >\r\n                                        Length\r\n                                    </div>\r\n                                    <div className=\"wrap\" >\r\n                                        {this.state.show.leng}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/*<div>\r\n                                <div className=\"display-type wrap\" >\r\n                                    A Product Of\r\n                                </div>\r\n                                <div className=\"wrap\" >\r\n                                    <img alt=\"app\" src={this.state.show.app} width=\"30px\" style={{ marginRight: \"10px\", borderRadius: \"5px\" }} />\r\n                                    {this.state.show.appName}\r\n                                </div>\r\n                            </div>*/}\r\n\r\n                            {/*<div className=\"wrap\" style={{ margin: \"20px 0px\" }} >\r\n                                <ButtonBase>\r\n                                    <div className=\"rent-button\">\r\n                                        <div className=\"wrap display-type\" style={{ color: \"white\" }} >Rent</div>\r\n                                        <div className=\"wrap \" >&#8377;20 /month</div>\r\n                                    </div>\r\n                                </ButtonBase>\r\n                            </div>*/}\r\n\r\n                            <div style={{ padding: '20px', textAlign: \"center\" }} className=\"display-type\" >\r\n                                {this.state.show.description}\r\n                            </div>\r\n\r\n                            {\r\n                                this.state.show.season ? (\r\n                                    <div>\r\n                                        <SeasonTabs seasons={this.state.show.season} id={this.state.show.id} />\r\n                                    </div>\r\n                                ) : (\r\n                                        <div></div>\r\n                                    )\r\n                            }\r\n\r\n                            {/*\r\n                                this.state.related ? (\r\n                                    <div>\r\n                                        <div className=\"h7\" >\r\n                                            Related\r\n                                        </div>\r\n                                        <div className=\"ss-container\" >\r\n                                            {\r\n                                                this.state.related.map(item => {\r\n                                                    return (\r\n                                                        <ButtonBase style={{ height: \"100%\", marginRight: \"20px\" }}>\r\n                                                            <a href={\"/display/\" + item.industry + \"/\" + item.platform + \"/\" + item.genre + \"/\" + item.id}\r\n                                                                style={{ height: \"100%\" }}  >\r\n                                                                <div className=\"list-item wrap\" style={{ backgroundImage: \"url(\" + item.poster + \")\" }} >\r\n\r\n                                                                </div>\r\n                                                            </a>\r\n                                                        </ButtonBase>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                        <div></div>\r\n                                    )\r\n                            */}\r\n                            {\r\n                                this.state.show.cast ? (\r\n                                    <div>\r\n                                        <Cast data={this.state.show.cast} />\r\n                                    </div>\r\n                                ): (\r\n                                    <div></div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    ) : (\r\n                            <div className=\"wrap\" style={{ minHeight: \"90vh\" }} >\r\n                                <Loader\r\n                                    type=\"TailSpin\"\r\n                                    color={theme.palette.primary.light}\r\n                                    height={50}\r\n                                    width={50}\r\n                                    timeout={3000} //3 secs\r\n                                />\r\n                            </div>\r\n                        )\r\n                }\r\n\r\n                {/*<Dialog fullScreen open={this.state.open} TransitionComponent={Transition} style={{ marginTop: \"30%\", boxShadow: \"0px -10px 20px rgba(0,0,0,0.5)\", backgroundColor: theme.palette.primary.dark, color: theme.palette.primary.light }} >\r\n                    <AppBar position=\"relative\" elevation={0} style={{ backgroundColor: theme.palette.primary.dark, color: theme.palette.primary.light }} >\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={this.handleClose} aria-label=\"close\">\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    {\r\n                        this.state.show ? (\r\n                            <div>\r\n                                <div>\r\n                                    <div className=\"wrap\" >\r\n                                        <div className=\"list-item wrap\" style={{ backgroundImage: \"url(\" + this.state.show.poster + \")\", margin: '15px' }} >\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div >\r\n                                        <div>\r\n                                            <div className=\"wrap\" >\r\n                                                <div style={{ marginRight: \"10px\" }} >\r\n                                                    <img className=\"app-logo\" alt=\"logo\" src={this.state.show.app} width=\"30px\" />\r\n                                                </div>\r\n                                                <div>\r\n                                                    {this.state.show.appName}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"wrap\" style={{ margin: \"20px 0px\" }} >\r\n                                                <ButtonBase>\r\n                                                    <div className=\"rent-button\">\r\n                                                        <div className=\"wrap display-type\" style={{ color: \"white\" }} >Rent</div>\r\n                                                        <div className=\"wrap \" >&#8377;20 /month</div>\r\n                                                    </div>\r\n                                                </ButtonBase>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"wrap display-type\" style={{ textAlign: \"center\", marginBottom: \"20px\" }} >\r\n                                    Why buy expensive yearly or monthly packages and subscriptions. When you can rent for less?\r\n                                </div>\r\n                                <div className=\"h7\" >\r\n                                    Recommended Plans\r\n                                </div>\r\n\r\n                            </div>\r\n                        ) : (\r\n                                <div></div>\r\n                            )\r\n                    }\r\n                </Dialog>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function Display() {\r\n    const { industry } = useParams();\r\n    const { platform } = useParams();\r\n    const { genre } = useParams();\r\n    const { id } = useParams();\r\n\r\n    React.useEffect(() => {\r\n    }, [industry]);\r\n\r\n    return (\r\n        <Adapter industry={industry} platform={platform} genre={genre} id={id} />\r\n    )\r\n}\r\n","C:\\Users\\super\\.vscode\\ott\\src\\Theme\\Theme.js",[],["179","180"],"C:\\Users\\super\\.vscode\\ott\\src\\firebase.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Discover.js",[],["181","182"],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getCollectionQuery.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\shuffleArray.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Components\\MyList.js",["183"],"import React, { Component } from 'react'\r\nimport \"../CSS/Components/MyList.css\"\r\nimport { ButtonBase } from '@material-ui/core'\r\n//import { Link } from 'react-router-dom'\r\nimport { Link } from \"react-tiger-transition\";\r\nimport { FixedSizeList } from 'react-window';\r\n\r\nexport class MyList extends Component {\r\n\r\n    state = {\r\n        data: null\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.data ? (\r\n                        <div>\r\n                            <div className=\"h7\" >\r\n                                {this.props.title}\r\n                            </div>\r\n\r\n\r\n                            <div className=\"list-container\" >\r\n                                {\r\n                                    this.props.data.map(item => {\r\n                                        return (\r\n                                            <div style={{ display: \"inline-block\" }} >\r\n\r\n                                                <ButtonBase className=\"w3-animate-opacity\" style={{ height: \"100%\", marginRight: \"20px\" }}>\r\n                                                    <Link to={\"/display/\" + item.id}\r\n                                                        transition='glide-left'\r\n                                                        style={{ height: \"100%\" }}  >\r\n                                                        <div className=\"list-item wrap\" style={{ backgroundImage: \"url(\" + item.poster + \")\" }} >\r\n\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                </ButtonBase>\r\n                                                {/*<div style={{ margin: \"10px 0px\", display: \"flex\" }} >\r\n                                                    <div>\r\n                                                        <img src={item.app} className=\"app-logo\" alt=\"app\" width=\"30px\" />\r\n                                                    </div>\r\n                                                    <div style={{ marginLeft: \"5px\" }} >\r\n                                                        <div>\r\n                                                            {item.name}\r\n                                                        </div>\r\n                                                        <div style={{ fontSize: \"10px\" }} className=\"rate\" >\r\n                                                            {item.year}\r\n                                                        </div>\r\n                                                    </div>\r\n                                        </div>*/}\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                            <div>\r\n\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyList\r\n",["184","185"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Categories\\Anime.js",["186"],"import React, { Component } from 'react'\r\nimport MyList from '../../Components/MyList'\r\nimport SubAppBar from '../../Components/SubAppBar'\r\nimport getCollectionQuery, { getByWord } from '../../Database/getCollectionQuery'\r\nimport shuffleArray from '../../Database/shuffleArray'\r\nimport axios from 'axios';\r\n\r\nconst list = [\r\n    {\r\n        title: \"All\",\r\n        filter: \"Anime\"\r\n    }\r\n]\r\n\r\nvar data = []\r\n\r\nexport class Anime extends Component {\r\n\r\n    state = {\r\n        data: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        for (var i = 0; i < list.length; i++) {\r\n            if (list[i].filter.length > 2) {\r\n                getByWord(\"Index\", list[i].filter).then(result => {\r\n                    data.push(shuffleArray(result))\r\n                    this.setState({ data: data })\r\n                })\r\n            } else {\r\n                getCollectionQuery(\"Index\", list[i].filter).then(result => {\r\n                    data.push(shuffleArray(result))\r\n                    this.setState({ data: data })\r\n                })\r\n            }\r\n        }\r\n\r\n        /*axios.post(\"https://us-central1-project-ott-d883c.cloudfunctions.net/api/todos\", { name: \"NAME\" }).then(result => {\r\n            console.log(result.data)\r\n        })*/\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SubAppBar />\r\n                {\r\n                    this.state.data ? (\r\n                        <MyList title=\"All\" data={this.state.data[0]} />\r\n                    ) : (\r\n                            <div className=\"wrap\" >\r\n                                Please Wait\r\n                            </div>\r\n                        )\r\n                }\r\n                {/*<MyList title=\"Shounen Comedy\" filter={[\"Shounen\", \"Comedy\"]} />\r\n                <MyList title=\"Children & Family\" filter={[\"Anime\", \"Shounen\"]} />\r\n                <MyList title=\"Slice Of Life\" filter={[\"Anime\", \"Slice Of Life\"]} />*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Anime\r\n",["187","188"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Temp.js",[],["189","190"],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getEpisode.js",[],["191","192"],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Help.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\About.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\Signin.js",["193"],"import React, { Component } from 'react'\r\nimport SubAppBar from \"../Components/SubAppBar\"\r\nimport { FaFacebookF, FaGooglePlusG } from \"react-icons/fa\"\r\n\r\nexport class Signin extends Component {\r\n\r\n    state = {\r\n        pw: null,\r\n        userEmail: \"\",\r\n        cpw: null,\r\n        error: null,\r\n        phone: \"\",\r\n    }\r\n\r\n    responseGoogle = () => {\r\n        window.Android.signin();\r\n    }\r\n\r\n    responseEmail = (e) => {\r\n        e.preventDefault()\r\n        if (this.state.pw === this.state.cpw) {\r\n            window.Android.emailsignin(this.state.userEmail, this.state.pw);\r\n        } else if (this.state.pw !== this.state.cpw) {\r\n            this.setState({ error: \"Passwords do not match.\" })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SubAppBar />\r\n\r\n                <div>\r\n                    <h2 className=\"wrap\" >\r\n                        Sign In\r\n                    </h2>\r\n                    {/*<div className=\"wrap\" >\r\n                        Sign in by Phone.\r\n                    </div>\r\n                    <form style={{ padding: \"10px\" }} onSubmit={(e) => { this.responseEmail(e) }} >\r\n                        <div>\r\n                            <label>Phone</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"phone\" name=\"phone\" required placeholder=\"Phone\" value={this.state.phone} onChange={(e) => { this.setState({ phone: e.target.value }) }} />\r\n                        </div>\r\n                        {\r\n                            this.state.phone.length > 9 && this.state.userEmail.length < 1 ? (\r\n                                <div className=\"wrap\" >\r\n                                    <input type=\"submit\" value=\"Get OTP\" />\r\n                                </div>\r\n                            ) : (\r\n                                    <div></div>\r\n                                )\r\n                        }\r\n                    </form>*/}\r\n\r\n                    <div className=\"wrap\" >\r\n                        Sign in by e-mail.\r\n                    </div>\r\n                    <form style={{ padding: \"10px\" }} onSubmit={(e) => { this.responseEmail(e) }} >\r\n                        <div>\r\n                            <label>Email</label>\r\n                        </div>\r\n                        <div>\r\n                            <input id=\"email\" name=\"email\" required placeholder=\"Email\" value={this.state.userEmail} onChange={(e) => { this.setState({ userEmail: e.target.value }) }} />\r\n                        </div>\r\n                        {\r\n                            this.state.userEmail.length > 0 ? (\r\n                                <div>\r\n                                    <div>\r\n                                        <label>Password</label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input id=\"pw\" name=\"pw\" required placeholder=\"Password\" value={this.state.pw} onChange={(e) => { this.setState({ pw: e.target.value }) }} />\r\n                                    </div>\r\n                                    <div>\r\n                                        <label>Confirm Password</label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input id=\"cpw\" name=\"cpw\" required placeholder=\"Confirm Password\" value={this.state.cpw} onChange={(e) => { this.setState({ cpw: e.target.value }) }} />\r\n                                    </div>\r\n                                    <div className=\"wrap\" >\r\n                                        <input type=\"submit\" value=\"Sign In\" />\r\n                                    </div>\r\n                                    <div>\r\n                                        {this.state.error}\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                    <div>\r\n\r\n                                    </div>\r\n                                )\r\n                        }\r\n                    </form>\r\n                </div>\r\n\r\n                <p className=\"wrap\" >\r\n                    <h3>\r\n                        Other Sign In Options\r\n                    </h3>\r\n                </p>\r\n\r\n                <div className=\"wrap\">\r\n                    <div>\r\n                        <div className=\"wrap\" >\r\n                            <div onClick={this.responseGoogle} className=\"wrap\"\r\n                                style={{\r\n                                    borderRadius: \"5px\",\r\n                                    boxShadow: \"0px 0px 5px\",\r\n                                    padding: \"10px\",\r\n                                    backgroundColor: \"#D54836\",\r\n                                    color: \"white\",\r\n                                    justifyContent: \"space-between\",\r\n                                    margin: \"10px\"\r\n                                }} >\r\n                                <FaGooglePlusG size=\"20px\" style={{ marginRight: \"10px\" }} />\r\n                                <div>\r\n                                    Google\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signin\r\n","C:\\Users\\super\\.vscode\\ott\\src\\Components\\SeasonTabs.js",["194","195"],"import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { theme as color } from '../Theme/Theme'\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport \"../CSS/Pages/Display.css\"\r\nimport \"../CSS/Components/MyList.css\"\r\nimport getSubCollection from '../Database/getSubCollection';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3} style={{ padding: \"10px 0px\" }} >\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\n\r\nconst StyledTabs = withStyles({\r\n    indicator: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'transparent',\r\n        '& > span': {\r\n            maxWidth: 40,\r\n            width: '100%',\r\n            backgroundColor: '#fff',\r\n        },\r\n    },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        color: '#fff',\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        fontSize: theme.typography.pxToRem(15),\r\n        marginRight: theme.spacing(1),\r\n        '&:focus': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    padding: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    demo2: {\r\n        backgroundColor: color.palette.primary.dark,\r\n    },\r\n}));\r\n\r\n\r\nexport default class SeasonTabs extends React.Component {\r\n\r\n    state = {\r\n        value: 0,\r\n        tabs: [],\r\n        s: []\r\n    }\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.setState({ value: newValue });\r\n    };\r\n\r\n    componentDidMount() {\r\n        var i = 0;\r\n\r\n        for (i; i < parseInt(this.props.seasons); i++) {\r\n            this.state.tabs.push(\r\n                <StyledTab label={\"Season \" + (i + 1)} />\r\n            )\r\n            getSubCollection(\"Content\", this.props.id, \"Season-\" + (i + 1)).then(r => {\r\n                this.state.s.push(r)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <StyledTabs value={this.state.value} variant=\"scrollable\" scrollButtons=\"auto\" onChange={this.handleChange} aria-label=\"styled tabs example\">\r\n                        {\r\n                            this.state.tabs.map(item => {\r\n                                return (\r\n                                    item\r\n                                )\r\n                            })\r\n                        }\r\n                    </StyledTabs>\r\n                    {\r\n                        this.state.tabs &&\r\n                        this.state.tabs.map((item, index) => {\r\n                            if (index < 9) {\r\n                                return (\r\n                                    <TabPanel value={this.state.value} index={index}>\r\n                                        <div className=\"ss-container\" >\r\n                                            {\r\n                                                this.state.s[index] &&\r\n                                                this.state.s[index].map((i, episode) => {\r\n                                                    if (episode < 9) {\r\n                                                        return (\r\n                                                            <a href={\"/play/\" + this.props.id + \"/Season-\" + (index + 1) + \"/episode-0\" + (episode + 1)} >\r\n                                                                <div style={{\r\n                                                                    background: \"url(\" + i.image + \")\",\r\n                                                                    backgroundSize: \"cover\",\r\n                                                                    backgroundPosition: \"center\",\r\n                                                                    height: \"30vw\",\r\n                                                                    width: \"45vw\",\r\n                                                                    marginRight: \"10px\",\r\n                                                                    borderRadius: \"2px\",\r\n                                                                    boxShadow: \"0px 10px 10px  rgba(0, 0, 0, 0.5)\",\r\n                                                                    display: \"flex\",\r\n                                                                    flexDirection: \"column\",\r\n                                                                    justifyContent: \"flex-end\"\r\n                                                                }} >\r\n                                                                </div>\r\n                                                                <div style={{ fontSize: \"12px\", textOverflow: \"ellipsis\", width: \"40vw\", whiteSpace: \"nowrap\", overflow: \"hidden\", marginTop: \"10px\" }} >\r\n                                                                    {i.name}\r\n                                                                </div>\r\n                                                                <div style={{ fontSize: \"10px\", color: \"grey\", textTransform: \"uppercase\" }} >\r\n                                                                    Season-{(index + 1)} Episode-{(episode + 1)}\r\n                                                                </div>\r\n                                                                <div style={{ fontSize: \"10px\", color: \"grey\", textTransform: \"uppercase\" }} >\r\n                                                                    {i.date}\r\n                                                                </div>\r\n                                                            </a>\r\n                                                        )\r\n                                                    } else {\r\n                                                        return (\r\n                                                            <a href={\"/play/\" + this.props.id + \"/Season-\" + (index + 1) + \"/episode-\" + (episode + 1)} >\r\n                                                                <div style={{\r\n                                                                    background: \"url(\" + i.image + \")\",\r\n                                                                    backgroundSize: \"cover\",\r\n                                                                    backgroundPosition: \"center\",\r\n                                                                    height: \"30vw\",\r\n                                                                    width: \"45vw\",\r\n                                                                    marginRight: \"10px\",\r\n                                                                    borderRadius: \"2px\",\r\n                                                                    boxShadow: \"0px 10px 10px  rgba(0, 0, 0, 0.5)\",\r\n                                                                    display: \"flex\",\r\n                                                                    flexDirection: \"column\",\r\n                                                                    justifyContent: \"flex-end\"\r\n                                                                }} >\r\n                                                                </div>\r\n                                                                <div style={{ fontSize: \"12px\", textOverflow: \"ellipsis\", width: \"40vw\", whiteSpace: \"nowrap\", overflow: \"hidden\", marginTop: \"10px\" }} >\r\n                                                                    {i.name}\r\n                                                                </div>\r\n                                                                <div style={{ fontSize: \"10px\", color: \"grey\", textTransform: \"uppercase\" }} >\r\n                                                                    Season-{(index + 1)} Episode-{(episode + 1)}\r\n                                                                </div>\r\n                                                                <div style={{ fontSize: \"10px\", color: \"grey\", textTransform: \"uppercase\" }} >\r\n                                                                    {i.date}\r\n                                                                </div>\r\n                                                            </a>\r\n                                                        )\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </TabPanel>\r\n                                )\r\n                            } else {\r\n\r\n                            }\r\n                        })\r\n                    }\r\n                    <Typography />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Users\\super\\.vscode\\ott\\src\\Components\\SubAppBar.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Pages\\FileUpload.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getCollection.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Components\\MyAppBar.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\reportWebVitals.js",[],["196","197"],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getSeason.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Components\\Carousel.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\getSubCollection.js",[],"C:\\Users\\super\\.vscode\\ott\\src\\Database\\uploadFile.js",["198","199"],"C:\\Users\\super\\.vscode\\ott\\src\\Components\\ContinueWatching.js",[],["200","201"],"C:\\Users\\super\\.vscode\\ott\\src\\Components\\Cast.js",[],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":11,"column":10,"nodeType":"208","messageId":"209","endLine":11,"endColumn":20},{"ruleId":"206","severity":1,"message":"210","line":25,"column":9,"nodeType":"208","messageId":"209","endLine":25,"endColumn":17},{"ruleId":"206","severity":1,"message":"211","line":33,"column":11,"nodeType":"208","messageId":"209","endLine":33,"endColumn":15},{"ruleId":"202","replacedBy":"212"},{"ruleId":"204","replacedBy":"213"},{"ruleId":"202","replacedBy":"214"},{"ruleId":"204","replacedBy":"215"},{"ruleId":"202","replacedBy":"216"},{"ruleId":"204","replacedBy":"217"},{"ruleId":"202","replacedBy":"218"},{"ruleId":"204","replacedBy":"219"},{"ruleId":"206","severity":1,"message":"220","line":11,"column":8,"nodeType":"208","messageId":"209","endLine":11,"endColumn":13},{"ruleId":"221","severity":1,"message":"222","line":30,"column":5,"nodeType":"223","messageId":"224","endLine":32,"endColumn":6},{"ruleId":"202","replacedBy":"225"},{"ruleId":"204","replacedBy":"226"},{"ruleId":"202","replacedBy":"227"},{"ruleId":"204","replacedBy":"228"},{"ruleId":"206","severity":1,"message":"229","line":6,"column":10,"nodeType":"208","messageId":"209","endLine":6,"endColumn":23},{"ruleId":"202","replacedBy":"230"},{"ruleId":"204","replacedBy":"231"},{"ruleId":"206","severity":1,"message":"232","line":6,"column":8,"nodeType":"208","messageId":"209","endLine":6,"endColumn":13},{"ruleId":"202","replacedBy":"233"},{"ruleId":"204","replacedBy":"234"},{"ruleId":"202","replacedBy":"235"},{"ruleId":"204","replacedBy":"236"},{"ruleId":"202","replacedBy":"237"},{"ruleId":"204","replacedBy":"238"},{"ruleId":"206","severity":1,"message":"239","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":21},{"ruleId":"206","severity":1,"message":"240","line":66,"column":7,"nodeType":"208","messageId":"209","endLine":66,"endColumn":16},{"ruleId":"241","severity":1,"message":"242","line":120,"column":59,"nodeType":"243","messageId":"244","endLine":120,"endColumn":61},{"ruleId":"202","replacedBy":"245"},{"ruleId":"204","replacedBy":"246"},{"ruleId":"206","severity":1,"message":"247","line":1,"column":10,"nodeType":"208","messageId":"209","endLine":1,"endColumn":17},{"ruleId":"248","severity":1,"message":"249","line":14,"column":46,"nodeType":"243","messageId":"250","endLine":19,"endColumn":14},{"ruleId":"202","replacedBy":"251"},{"ruleId":"204","replacedBy":"252"},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"no-unused-vars","'updateUser' is defined but never used.","Identifier","unusedVar","'episodes' is assigned a value but never used.","'cast' is assigned a value but never used.",["253"],["254"],["253"],["254"],["253"],["254"],["253"],["254"],"'Slide' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["253"],["254"],["253"],["254"],"'FixedSizeList' is defined but never used.",["253"],["254"],"'axios' is defined but never used.",["253"],["254"],["253"],["254"],["253"],["254"],"'FaFacebookF' is defined but never used.","'useStyles' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["253"],["254"],"'storage' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","unsafeRefs",["253"],["254"],"no-global-assign","no-unsafe-negation"]